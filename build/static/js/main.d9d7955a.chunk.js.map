{"version":3,"sources":["assets/img/signup_bg_2.png","constants/actionTypes.js","reducers/auth.js","reducers/users.js","reducers/events.js","reducers/errors.js","reducers/index.js","assets/img/logo.png","components/Navbars/styles.js","components/Dropdowns/EventsDropdown.js","components/Dropdowns/UserDropdown.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","utilities/Forms.js","api/index.js","actions/user.js","components/Cards/UsersProfileCards/TeamCard.js","components/Cards/UsersProfileCards/PlayerCard.js","components/Cards/UsersProfileCards/DirectorCard.js","components/Cards/UsersProfileCards/OtherCard.js","components/Cards/UsersProfileCards/AdminCard.js","views/UserProfilePage.js","components/Cards/UserImageCard.js","dashboard/UserDetails.js","components/Modals/UpdateActivityModal.js","components/Cards/SelectedUserProfileCards/SelectedTeamCard.js","components/Cards/SelectedUserProfileCards/SelectedPlayerCard.js","components/Cards/SelectedUserProfileCards/SelectedDirectorCard.js","components/Cards/SelectedUserProfileCards/SelectedOtherCard.js","views/SelectedUserProfilePage.js","dashboard/SelectedUserDetails.js","components/Footers/FooterAdmin.js","components/Sidebar/AdminSidebar.js","views/GoBackPage.js","components/Tables/UsersTable.js","components/Cards/userActionsCards/AdminActions/UserActivity.js","actions/event.js","components/Forms/CreateEventForm.js","components/Cards/userActionsCards/DirectorActions/CreateEvent.js","components/Sidebar/DirectorSidebar.js","dashboard/Account.js","components/Navbars/AuthNavbar.js","components/Footers/FooterSmall.js","actions/auth.js","views/auth/Login.js","views/auth/rolesRegisterForms/Other.js","views/auth/rolesRegisterForms/Director.js","views/auth/rolesRegisterForms/Player.js","views/auth/rolesRegisterForms/Team.js","views/auth/rolesRegisterForms/Admin.js","views/auth/Register.js","layouts/Auth.js","assets/img/bb2.jpg","components/Navbars/navbar.js","components/Navbars/IndexNavbar.js","components/Footers/Footer.js","views/AboutUs.js","assets/img/bb3.jpg","views/ContactUs.js","assets/img/bb4.jpg","views/Rules.js","assets/img/bb1.jpg","views/Index.js","views/LoadingPage.js","assets/img/tbg2.jpg","components/Modals/SignInEnrollModal.js","views/events/tournaments/TournamentPage.js","components/Cards/TournamentCard.js","views/events/tournaments/Tournaments.js","views/events/EventsMainPage.js","App.js","index.js"],"names":["AUTH","LOGOUT","UPDATE","FETCH_ALL","ACTIVITY","CREATE","ADD_ERROR","CLEAR_ERROR","FETCH_ONE_USER","FETCH_ONE_EVENT","authReducer","state","authData","action","type","actionType","localStorage","setItem","JSON","stringify","data","loading","errors","clear","payload","usersReducer","users","map","user","_id","eventsReducer","events","event","errorsReducer","reducers","combineReducers","auth","success","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","heading","color","textDecoration","image","marginLeft","toolbar","width","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","backgroundColor","IndexDropdown","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","className","href","ref","onClick","e","preventDefault","createPopper","current","placement","to","UserDropdown","parse","getItem","setUser","dispatch","useDispatch","location","useLocation","history","useHistory","useEffect","result","role","push","Navbar","useStyles","token","decode","exp","Date","getTime","navbarOpen","id","EventsDropdown","DirectorSidebar","collapseShow","setCollapseShow","src","Logo","style","height","window","indexOf","Form","str","test","length","isInvalid","obj","keys","Object","entries","results","key","replace","finalResult","charAt","toUpperCase","slice","isRequired","value","isEmail","validEmail","minLength","assign","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","signIn","formData","post","adminSignin","getUser","get","directorSignUp","playerSignUp","teamSignUp","otherSignUp","adminSignUp","updateUser","updatedUser","patch","updateAdmin","updateActivity","createEvent","getEvent","createError","errorMessage","updateuser","userInfo","a","api","setInterval","reload","response","message","updateactivity","active","router","scroll","initialState","profileImage","teamName","firstName","lastName","email","phoneNumber","city","ageGroup","division","TeamCard","accountData","setAccountData","validate","setValidate","isUpdated","setIsUpdated","setId","error","useSelector","defaultValue","onDone","base64","multiple","htmlFor","onChange","target","Tooltip","title","disabled","placeholder","states","name","abbreviation","console","log","isValid","validator","Number","validateForm","highSchoolName","street","zipcode","dob","gradYear","collegeCommitment","weight","pThrow","bat","primPosition","seconPosition","parentFirst","parentLast","parentEmail","parentPhone","PlayerCard","v","Weight","companyName","taxId","checkingName","checkingNum","routingNum","fieldComplexName","numOfFields","fieldComplexCity","fieldComplexState","DirectorCard","maxLength","OtherCard","AdminCard","updateadmin","UserProfilePage","userRole","setUserRole","userActivity","setUserActivity","UserImageCard","setUserInfo","alt","Avatar","UserDetails","UpdateActivityModal","show","setShowModal","Modal","ModalHeader","ModalTitle","ModalFooter","SelectedTeamCard","readOnly","variant","SelectedDirectorCard","SelectedOtherCard","SelectedUserProfilePage","SelectedPlayerCard","SelectedUserDetails","Footer","transform","xmlns","preserveAspectRatio","version","viewBox","x","y","points","getFullYear","GoBack","paddingTop","UsersTable","handleNameClick","marginBottom","UserActivity","defaultProps","eventImage","createdBy","live","eventName","startDate","endDate","costPerTeam","gateFee","entryFee","maxTeamsNum","fieldComplexStreet","fieldComplexZipcode","gameFormat","CreateEventForm","isCreated","setIsCreated","CreateEvent","Account","route","selectedUser","setSelectedUser","exact","path","component","props","setNavbarOpen","FooterSmall","absolute","password","Login","showPassword","setShowPassword","admin","setAdmin","toggleAdmin","signin","passwordConfirm","agreeBtn","Other","showPasswordConfirm","setShowPasswordConfirm","passwordMatch","setPasswordMatch","checked","confirmCheckingNum","confirmRoutingNum","Director","checkingNumMatch","setCheckingNumMatch","routingNumMatch","setRoutingNumMatch","Player","Team","Admin","Register","roleValue","setRoleValue","Auth","transparent","backgroundImage","require","default","from","IndexNavbar","Landing","scrollTo","background","Index","rows","cols","fixed","Loading","CircularProgress","EnrollAlertModal","TournamentPage","paddingBottom","fontSize","class","TournamentCard","tournament","Card","Typography","moment","createdAt","fromNow","CardContent","CardActions","Tournaments","marginTop","Grid","container","spacing","item","xs","sm","md","EventsMainPage","App","AboutUs","ContactUs","Rules","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9d7955a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/signup_bg_2.4f2cb0ac.png\";","export const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const UPDATE = 'UPDATE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const ACTIVITY = 'ACTIVITY';\r\nexport const CREATE = 'CREATE';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const FETCH_ONE_USER = 'FETCH_ONE_USER';\r\nexport const FETCH_ONE_EVENT = 'FETCH_ONE_EVENT';\r\n\r\n\r\n","import * as actionType from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case actionType.AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n      return { ...state, authData: action.data, loading: false, errors: null };\r\n    case actionType.LOGOUT:\r\n      localStorage.clear();\r\n      return { ...state, authData: null, loading: false, errors: null };\r\n    case actionType.UPDATE:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.payload }));\r\n      return { ...state, authData: action.payload, loading: false, errors: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import  *  as actionType from '../constants/actionTypes';\r\n\r\nconst usersReducer = (users = [], action) => {\r\n  switch (action.type) {\r\n    case actionType.FETCH_ALL:\r\n      return action.payload;\r\n    case actionType.FETCH_ONE_USER:\r\n      localStorage.setItem('selectedUser', JSON.stringify({ ...action?.payload }));\r\n      return users.map((user) => (user._id === action.payload._id ? user : user));\r\n      case actionType.ACTIVITY:\r\n        return users.map((user) => (user._id === action.payload._id ? action.payload : user));\r\n    default:\r\n      return users;\r\n  }\r\n};\r\n\r\nexport default usersReducer","import  *  as actionType from '../constants/actionTypes';\r\n\r\nconst eventsReducer = (events = [], action) => {\r\n  switch (action.type) {\r\n    case actionType.FETCH_ALL:\r\n      return action.payload;\r\n    case actionType.CREATE:\r\n      return [...events, action.payload];\r\n    case actionType.FETCH_ONE_EVENT:\r\n      localStorage.setItem('event', JSON.stringify({ ...action?.payload }));\r\n      return events.map((event) => (event._id === action.payload._id ? event : events));\r\n    default:\r\n      return events;\r\n  }\r\n};\r\n\r\nexport default eventsReducer","import  *  as actionType from '../constants/actionTypes';\r\n\r\nconst errorsReducer = (errors = [], action) => {\r\n  switch (action.type) {\r\n    case actionType.ADD_ERROR:\r\n      return [...errors, action.payload];\r\n    case actionType.CLEAR_ERROR:\r\n      return errors = [];\r\n    default:\r\n      return errors;\r\n  }\r\n};\r\n\r\nexport default errorsReducer","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\nimport users from './users';\r\nimport events from './events';\r\nimport errors from './errors';\r\nimport success from './success';\r\n\r\nexport const reducers = combineReducers({ auth, users, events, errors, success });","export default __webpack_public_path__ + \"static/media/logo.48e772cd.png\";","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createPopper } from \"@popperjs/core\";\r\n\r\nconst IndexDropdown = () => {\r\n  // dropdown props\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\",\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n  return (\r\n    <>\r\n      <a\r\n        className=\"text-white btn btn-success hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n        href=\"#pablo\"\r\n        ref={btnDropdownRef}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\r\n        }}\r\n      >\r\n      <i className=\"fas fa-chevron-circle-down\"></i>&nbsp;\r\n       Events\r\n      </a>\r\n      <div\r\n        ref={popoverDropdownRef}\r\n        className={\r\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\r\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n        }\r\n      >\r\n        <Link\r\n          to=\"/Events\"\r\n          className=\"hover:text-blueGray-300 text-blueGray-500 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n        >\r\n          Events / Tournaments\r\n        </Link>\r\n        <hr/>\r\n        <Link\r\n          to=\"/admin/settings\"\r\n          className=\"hover:text-blueGray-300 text-blueGray-500 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n        >\r\n          Showcases\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexDropdown;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createPopper } from \"@popperjs/core\";\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport decode from 'jwt-decode';\r\n\r\nimport * as actionType from '../../constants/actionTypes';\r\nconst UserDropdown = () => {\r\n  // dropdown props\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\",\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n    \r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n  \r\n  return (\r\n    <>\r\n      <a\r\n        className=\"text-blueGray-500 block\"\r\n        href=\"#pablo\"\r\n        ref={btnDropdownRef}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\r\n        }}\r\n      >\r\n        <div className=\"items-center flex\">\r\n          <a\r\n            className=\"btn btn-success text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n            href=\"/\"\r\n          >\r\n            <i className=\"fas fa-user-circle\"></i>&nbsp;\r\n            Account\r\n          </a>\r\n        </div>\r\n      </a>\r\n      <div\r\n        ref={popoverDropdownRef}\r\n        className={\r\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\r\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n        }\r\n      >\r\n        <Link\r\n          to={`/account/${user.result.role === \"admin\" ? \"admin/\":\"\"}${user.result._id}`}\r\n          className=\"text-info hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold text-lightBlue\"\r\n        >\r\n          <i className=\"fas fa-tachometer-alt\"></i>&nbsp;\r\n          Dashboard\r\n        </Link>\r\n        <Link\r\n          to=\"/\"\r\n          className=\"text-info hover:text-blueGray-500 0 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold text-lightBlue\"\r\n          onClick={logout}\r\n        >\r\n          <i className=\"fas fa-sm fa-sign-out-alt\"></i>&nbsp;\r\n          Log Out\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport Logo from \"assets/img/logo.png\";\r\nimport useStyles from './styles';\r\nimport EventsDropdown from \"components/Dropdowns/EventsDropdown.js\";\r\nimport UserDropdown from \"components/Dropdowns/UserDropdown.js\";\r\n\r\nimport * as actionType from '../../constants/actionTypes';\r\n\r\n    \r\nexport default function Navbar() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n\r\n        history.push('/auth');\r\n        \r\n        setUser(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n    \r\n    const [navbarOpen, setNavbarOpen] = React.useState(false);  \r\n  return (\r\n    <>\r\n      {/* Navbar */}\r\n      <nav className=\"absolute top-0 left-0 w-full z-10 bg-transparent md:flex-row md:flex-nowrap md:justify-start flex items-center p-4\">\r\n        <div className=\"w-full mx-autp items-center flex justify-between md:flex-nowrap flex-wrap md:px-10 px-4\">\r\n          {/* Brand */}\r\n          <div\r\n            className={\r\n              \"lg:flex flex-grow items-center text-white lg:bg-opacity-0 lg:shadow-none\" +\r\n              (navbarOpen ? \" block\" : \" hidden\")\r\n            }\r\n            id=\"example-navbar-warning\"\r\n          >\r\n            <ul className=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"/\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n              <EventsDropdown />\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"\"\r\n                >\r\n                  Live Events\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"\"\r\n                    className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Players\r\n                </Link>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/aboutus\"\r\n                    className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  About Us\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/rules\"\r\n                    className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Rules\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/contactus\"\r\n                    className=\"text-white hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                    Contact Us\r\n                  </Link>\r\n              </li>\r\n                {user ? (\r\n                  \r\n                  <div className=\"flex items-center\">\r\n                    <UserDropdown />\r\n                  </div>\r\n                ):(\r\n                  <div className=\"row\">\r\n                    <li className=\"flex items-center\">\r\n                    <Link\r\n                      to=\"/auth/login\"\r\n                      className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                    >\r\n                      <i className=\"fas fa-sign-in-alt fa-fw\"></i>&nbsp;\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"flex items-center\">\r\n                    <Link\r\n                      to=\"/auth/signup\"\r\n                      className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                    >\r\n                      <i className=\"fa fa-user-plus fa-fw\"></i>&nbsp;\r\n                      Register\r\n                    </Link>\r\n                  </li>\r\n                  </div>\r\n                )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* End Navbar */}\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"assets/img/logo.png\";\r\n\r\nimport UserDropdown from \"components/Dropdowns/UserDropdown.js\";\r\n\r\nexport default function DirectorSidebar() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\r\n\r\n  useEffect(() => {\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\r\n        <div className=\"\">\r\n          {/* Toggler */}\r\n          <button\r\n            className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n            type=\"button\"\r\n            onClick={() => collapseShow === \"hidden\"?  setCollapseShow(\"bg-white m-2 py-3 px-6\"): setCollapseShow(\"hidden\")}\r\n          >\r\n            {collapseShow === \"hidden\"?<i className=\"fas fa-bars\"></i>:<i className=\"fas fa-times\"></i>}\r\n          </button>\r\n          {/* Brand */}\r\n          <Link\r\n            className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            to=\"/\"\r\n          >\r\n            <img src={Logo} style={{height:'85px'}}/>\r\n          </Link>\r\n          {/* User */}\r\n          <ul className=\"mt-1 md:hidden items-center flex flex-wrap list-none\">\r\n            <li className=\"inline-block relative\">\r\n              <UserDropdown />\r\n            </li>\r\n          </ul>\r\n          {/* Collapse */}\r\n          <div\r\n            className={\r\n              \"md:flex md:flex-col md:items-stretch md:opacity-100 top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded \" +\r\n              collapseShow\r\n            }\r\n          >\r\n            {/* Collapse header */}\r\n            <div className=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\">\r\n              <div className=\"flex flex-wrap\">\r\n              </div>\r\n            </div>\r\n\r\n            {/* Heading */}\r\n            <h6 className=\"col-md-12 text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\">\r\n              Menu\r\n            </h6>\r\n            {/* Navigation */}\r\n\r\n            <ul className=\"col-md-12 md:flex-col md:min-w-full flex flex-col list-none\">\r\n                <Link\r\n                  className={\r\n                    \"text-xs uppercase py-3 font-bold block \" +\r\n                    (window.location.href.indexOf(\"/admin/dashboard\") !== -1\r\n                      ? \"text-lightBlue-500 hover:text-lightBlue-600\"\r\n                      : \"text-blueGray-700 hover:text-blueGray-500\")\r\n                  }\r\n                  to={`/account/${user.result._id}`}\r\n                >\r\n                  <i className=\"fas fa-tools mr-2 text-sm \" />\r\n                  Update Details\r\n                </Link>\r\n            </ul>\r\n\r\n            {/* Divider */}\r\n            <hr className=\"my-4 md:min-w-full\" />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","/*\r\n Copyright (c) 2021 Christer Johansson of Sweden Inc.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n this software and associated documentation files (the \"Software\"), to deal in\r\n the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in all\r\n copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nclass Form {\r\n  /**\r\n   * Validate Login\r\n   * @param str\r\n   * @returns boolean\r\n   */\r\n  static validEmail(str) {\r\n    let regex =\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n    return regex.test(str);\r\n  }\r\n\r\n  /**\r\n   * Minimum length of string\r\n   * @param str\r\n   * @param length\r\n   * @returns\r\n   */\r\n  static minLength(str, length) {\r\n    let isInvalid = false;\r\n\r\n    if (str.length < length) {\r\n      isInvalid = true;\r\n    }\r\n\r\n    return isInvalid;\r\n  }\r\n\r\n  /**\r\n   * Form Validator\r\n   * @param  obj\r\n   * @returns\r\n   */\r\n  static validator(obj) {\r\n    let keys = Object.entries(obj);\r\n    let results = [];\r\n    let validations = null;\r\n\r\n    keys.map((key) => {\r\n      const result = key[0].replace(/([A-Z])/g, \" $1\");\r\n      const finalResult = result.charAt(0).toUpperCase() + result.slice(1);\r\n      if (\"isRequired\" in key[1] && key[1].isRequired) {\r\n        if (key[1].value.length === 0) {\r\n          results.push({\r\n            [key[0]]: [`The ${finalResult} is required.`],\r\n          });\r\n        } else {\r\n          if (\"isEmail\" in key[1] && key[1].isEmail) {\r\n            let isValidEmail = Form.validEmail(key[1].value);\r\n\r\n            if (!isValidEmail) {\r\n              results.push({\r\n                [key[0]]: [`The ${key[0]} must be valid email.`],\r\n              });\r\n            }\r\n          }\r\n\r\n          if (\r\n            \"minLength\" in key[1] &&\r\n            Form.minLength(key[1].value, key[1].minLength)\r\n          ) {\r\n            results.push({\r\n              [key[0]]: [\r\n                `The ${key[0]} must at least ${key[1].minLength} characters.`,\r\n              ],\r\n            });\r\n          }\r\n        }\r\n      } else if (\"isEmail\" in key[1]) {\r\n        let isValidEmail = Form.validEmail(key[1].value);\r\n\r\n        if (!isValidEmail) {\r\n          results.push({\r\n            [key[0]]: [`The ${key[0]} must be valid email`],\r\n          });\r\n        }\r\n      } else if (\r\n        \"minLength\" in key[1] &&\r\n        Form.minLength(key[1].value, key[1].minLength)\r\n      ) {\r\n        results.push({\r\n          [key[0]]: [\r\n            `The ${key[0]} must at least ${key[1].minLength} characters.`,\r\n          ],\r\n        });\r\n      }\r\n      return results;\r\n    });\r\n\r\n    results = Object.assign({}, ...results.map((result) => result));\r\n\r\n    if (Object.keys(results).length > 0) {\r\n      validations = {\r\n        errors: results,\r\n      };\r\n    } else {\r\n      validations = null;\r\n    }\r\n\r\n    return validations;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://fourbaggerserver.herokuapp.com/' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\n\r\nexport const signIn = (formData) => API.post('/signin', formData);\r\nexport const adminSignin = (formData) => API.post('/admin_signin', formData);\r\n\r\nexport const getUsers = () => API.get('/account/users');\r\n\r\nexport const getUser = (id) => API.get(`/account/users/${id}`);\r\n\r\nexport const directorSignUp = (formData) => API.post('/dir_signup', formData);\r\nexport const playerSignUp = (formData) => API.post('/player_signup', formData);\r\nexport const teamSignUp = (formData) => API.post('/team_signup', formData);\r\nexport const otherSignUp = (formData) => API.post('/other_signup', formData);\r\nexport const adminSignUp = (formData) => API.post('/admin_signup', formData);\r\n\r\nexport const updateUser = (id, updatedUser) => API.patch(`/account/${id}`, updatedUser);\r\nexport const updateAdmin = (id, updatedUser) => API.patch(`/account/admin/${id}`, updatedUser);\r\n\r\nexport const updateActivity = (id, updatedUser) => API.patch(`/account/${id}`, updatedUser);\r\n\r\nexport const createEvent = (formData) => API.post(`/events`, formData);\r\nexport const getEvents = () => API.get(`/events`);\r\nexport const getEvent = (id) => API.get(`/events/${id}`);\r\n\r\nexport const createError = (errorMessage) => API.post(`/errors`, errorMessage);\r\n\r\nexport const createSuccess = (successMessage) => API.post(`/success`, successMessage);\r\n","import { UPDATE, FETCH_ALL, ACTIVITY, ADD_ERROR, CLEAR_ERROR, FETCH_ONE_USER } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\n// Get users\r\nexport const getusers = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUsers();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n  }\r\n};\r\n\r\nexport const getuser = (id, router) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.getUser(id);\r\n      const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n      dispatch({ type: FETCH_ONE_USER, payload: data });\r\n      dispatch({ type: CLEAR_ERROR });\r\n      \r\n      if ( user.result.role === \"admin\" ){\r\n        router.push(`/account/users/${data.firstName}`)\r\n      } \r\n\r\n    } catch (error) {\r\n      await api.createError(error.response.data);\r\n\r\n      dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n    }\r\n  };\r\n\r\n  // Update Info\r\n  export const updateuser = (id, userInfo) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updateUser(id, userInfo);\r\n\r\n      dispatch({ type: UPDATE, payload: data });\r\n\r\n      setInterval(await window.location.reload(), 20000);\r\n\r\n      dispatch({ type: CLEAR_ERROR });\r\n    } catch (error) {\r\n      await api.createError(error.response.data);\r\n\r\n      dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n    }\r\n  };\r\n\r\n  export const updateadmin = (id, userInfo) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updateAdmin(id, userInfo);\r\n\r\n      dispatch({ type: UPDATE, payload: data });\r\n\r\n      setInterval(await window.location.reload(), 20000);\r\n\r\n      dispatch({ type: CLEAR_ERROR });\r\n    } catch (error) {\r\n      await api.createError(error.response.data);\r\n\r\n      dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n    }\r\n  };\r\n\r\n  export const updateactivity = (id, active, router) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updateActivity(id, active);\r\n      dispatch({ type: ACTIVITY, payload: data });\r\n      window.scroll(0, 0);\r\n      dispatch({ type: CLEAR_ERROR });  \r\n      router.push(`/account/admin/users`)\r\n\r\n    } catch (error) {\r\n      await api.createError(error.response.data);\r\n\r\n      dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n    }\r\n  };","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport FileBase from 'react-file-base64';\r\nimport Form from \"utilities/Forms\";\r\nimport states from 'json/states';\r\nimport decode from 'jwt-decode';\r\nimport { updateuser } from 'actions/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tooltip } from '@material-ui/core';\r\n// components\r\n  \r\nconst initialState = {\r\n    active: false, role: \"team\", profileImage: \"\", teamName: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", city: \"\", state: \"\", ageGroup: \"\", \r\n    division: \"\"\r\n};\r\n\r\nconst TeamCard = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const location = useLocation();\r\n    const [id, setId] = useState({});\r\n\r\n    const error = useSelector(state => state.errors);\r\n    const dispatch = useDispatch();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            profileImage: {\r\n                value: accountData.profileImage,\r\n                isRequired: true,\r\n            },\r\n            teamName: {\r\n                value: accountData.teamName,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n            },\r\n            ageGroup: {\r\n                value: accountData.ageGroup,\r\n                isRequired: true,\r\n            },\r\n            division: {\r\n                value: accountData.division,\r\n                isRequired: true,\r\n            }\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n        window.scroll(0,0);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, profileImage: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, teamName: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, ageGroup: \"\"});\r\n            setAccountData({...accountData, division: \"\"});\r\n            setAccountData({...accountData, active: user.result.active});\r\n            dispatch(updateuser(id, accountData));\r\n            setIsUpdated(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime());\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n        setAccountData(user.result)\r\n\r\n        setId(user.result._id);\r\n\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <form>\r\n          {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isUpdated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Updated Successfully!</h2>\r\n                </div>:\"\"}\r\n          <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Upload Your Image\r\n            </h6>\r\n          <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <FileBase\r\n                    type=\"file\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.profileImage\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    defaultValue={user.result.profileImage}\r\n                    onDone={({base64}) => setAccountData({...accountData, profileImage: base64})}\r\n                    multiple={false}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                />\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.profileImage\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.profileImage\r\n                    ? validate.validate.profileImage[0]\r\n                    : \"\"}\r\n                </div>\r\n                </div>\r\n              </div>\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Account Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n            <div className=\"w-full lg:w-12/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Team Name\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.teamName}\r\n                    onChange={(e) => setAccountData({...accountData, teamName: e.target.value})}                    \r\n                    />\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.teamName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.teamName\r\n                        ? validate.validate.teamName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Head Coach Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                        <Tooltip title=\"To update email. Please contact support\">\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              defaultValue={user.result.email}\r\n                              onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                          />\r\n                        </Tooltip>\r\n                    </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach Phone Number\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.phoneNumber}\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.phoneNumber\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.phoneNumber\r\n                      ? validate.validate.phoneNumber[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.firstName}\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.lastName}\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Age Group\r\n                  </label>\r\n                  <select\r\n                        type=\"select\"\r\n                        defaultValue={user.result.ageGroup}\r\n                        onChange={(e) => setAccountData({...accountData, ageGroup: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                        <option value=\"5u\">5U</option>\r\n                        <option value=\"6u\">6U</option>\r\n                        <option value=\"7u\">7U</option>\r\n                        <option value=\"8u\">8U</option>\r\n                        <option value=\"9u\">9U</option>\r\n                        <option value=\"10u\">10U</option>\r\n                        <option value=\"11u\">11U</option>\r\n                        <option value=\"12u\">12U</option>\r\n                        <option value=\"13u\">13U</option>\r\n                        <option value=\"14u\">14U</option>\r\n                        <option value=\"15u\">15U</option>\r\n                        <option value=\"16u\">16U</option>\r\n                        <option value=\"175u\">17U</option>\r\n                        <option value=\"18u\">18U</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.ageGroup\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.ageGroup\r\n                            ? validate.validate.ageGroup[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Division\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        onChange={(e) => setAccountData({...accountData, division: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"   \r\n                        defaultValue={user.result.division}\r\n                        >\r\n                        <option value=\"aa\">AA</option>\r\n                        <option value=\"aaa\">AAA</option>\r\n                        <option value=\"majors\">Majors</option>\r\n                        <option value=\"showcase\">Showcase</option>\r\n                        <option value=\"highSchool\">High School</option>\r\n                     </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    City\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.city}\r\n                    placeholder=\"City\"\r\n                    onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.city\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.city\r\n                        ? validate.validate.city[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    State\r\n                  </label>\r\n                  <select\r\n                        type=\"select\"\r\n                        defaultValue={user.result.state}\r\n                        onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                        <option defaultValue={true} value=\"\">-- State --</option>\r\n                        { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.state\r\n                            ? validate.validate.state[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <hr/>\r\n              <button\r\n              className=\"mt-10 col-12 btn-lg btn-success\"\r\n              type=\"button\"\r\n              onClick={update}\r\n            >\r\n              Save Updates\r\n            </button>\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamCard;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Form from \"utilities/Forms\";\r\nimport states from 'json/states';\r\nimport decode from 'jwt-decode';\r\nimport FileBase from 'react-file-base64';\r\nimport { updateuser } from 'actions/user';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n// components\r\n\r\nconst initialState = {\r\n    active: \"\", role: \"player\", profileImage: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", highSchoolName: \"\",\r\n    street: \"\", city: \"\", state: \"\", zipcode: \"\", dob: new Date(), gradYear: \"\", collegeCommitment: \"\",\r\n    height: \"\", weight: \"\",pThrow: \"\", bat: \"\", primPosition: \"\", seconPosition: \"\", parentFirst: \"\", parentLast: \"\", \r\n    parentEmail: \"\", parentPhone: \"\"\r\n};\r\n\r\nconst PlayerCard = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [id, setId] = useState({});\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const location = useLocation();\r\n\r\n    const error = useSelector(state => state.errors);\r\n    const dispatch = useDispatch();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            profileImage: {\r\n                value: accountData.profileImage,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            highSchoolName: {\r\n                value: accountData.highSchoolName,\r\n                isRequired: false,\r\n            },\r\n            street: {\r\n                value: accountData.street,\r\n                isRequired: true,\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n            },\r\n            zipcode: {\r\n                value: accountData.zipcode,\r\n                isRequired: true,\r\n            },\r\n            dob: {\r\n                value: accountData.dob,\r\n                isRequired: true,\r\n            },\r\n            gradYear: {\r\n                value: accountData.gradYear,\r\n                isRequired: true,\r\n            },\r\n            collegeCommitment: {\r\n                value: accountData.collegeCommitment,\r\n                isRequired: false,\r\n            },\r\n            height: {\r\n                value: accountData.height,\r\n                isRequired: true,\r\n            },\r\n            weight: {\r\n                value: accountData.weight,\r\n                isRequired: true,\r\n            },\r\n            pThrow: {\r\n                value: accountData.pThrow,\r\n                isRequired: true,\r\n            },\r\n            bat: {\r\n                value: accountData.bat,\r\n                isRequired: true,\r\n            },\r\n            primPosition: {\r\n                value: accountData.primPosition,\r\n                isRequired: true,\r\n            },\r\n            seconPosition: {\r\n                value: accountData.seconPosition,\r\n                isRequired: true,\r\n            },\r\n            parentFirst: {\r\n                value: accountData.parentFirst,\r\n                isRequired: true,\r\n            },\r\n            parentLast: {\r\n                value: accountData.parentLast,\r\n                isRequired: true,\r\n            },\r\n            parentEmail: {\r\n                value: accountData.parentEmail,\r\n                isRequired: true,\r\n            },\r\n            parentPhone: {\r\n                value: accountData.parentPhone,\r\n                isRequired: true,\r\n            }\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        \r\n        window.scroll(0,0);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, profileImage: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, highSchoolName: \"\"});\r\n            setAccountData({...accountData, street: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, zipcode: \"\"});\r\n            setAccountData({...accountData, dob: \"\"});\r\n            setAccountData({...accountData, gradYear: \"\"});\r\n            setAccountData({...accountData, collegeCommitment: \"\"});\r\n            setAccountData({...accountData, height: \"\"});\r\n            setAccountData({...accountData, weight: \"\"});\r\n            setAccountData({...accountData, pThrow: \"\"});\r\n            setAccountData({...accountData, bat: \"\"});\r\n            setAccountData({...accountData, primPosition: \"\"});\r\n            setAccountData({...accountData, parentFirst: \"\"});\r\n            setAccountData({...accountData, parentLast: \"\"});\r\n            setAccountData({...accountData, parentEmail: \"\"});\r\n            setAccountData({...accountData, parentPhone: \"\"});\r\n            setAccountData({...accountData, active: user.result.active});\r\n            dispatch(updateuser(id, accountData));\r\n            setIsUpdated(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime());\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n        setAccountData(user.result)\r\n\r\n        setId(user.result._id);\r\n\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <form>\r\n          {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isUpdated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Updated Successfully!</h2>\r\n                </div>:\"\"}\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Upload Your Image\r\n            </h6>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <FileBase\r\n                    type=\"file\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.profileImage\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    defaultValue={user.result.profileImage}\r\n                    onDone={({base64}) => setAccountData({...accountData, profileImage: base64})}\r\n                    multiple={false}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                />\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.profileImage\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.profileImage\r\n                    ? validate.validate.profileImage[0]\r\n                    : \"\"}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Player Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                \r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.firstName}\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                   Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.lastName}\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address  <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                        <Tooltip title=\"To update email. Please contact support\">\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              defaultValue={user.result.email}\r\n                              onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                          />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Phone Number\r\n                        </label>\r\n                        <input\r\n                        type=\"email\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.phoneNumber}\r\n                        onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.phoneNumber\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.phoneNumber\r\n                            ? validate.validate.phoneNumber[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    High School Name\r\n                    </label>\r\n                    <input\r\n                        placeholder='High School'\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.highSchoolName}\r\n                        onChange={(e) => setAccountData({...accountData, highSchoolName: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.highSchoolName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.highSchoolName\r\n                            ? validate.validate.highSchoolName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative  mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Date of Birth: <span style={{color:'red'}}></span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.dob\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        defaultValue={accountData.dob}\r\n                        placeholder=\"D.O.B.\"\r\n                        onChange={(e) => setAccountData({...accountData, dob: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.dob\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.dob\r\n                        ? validate.validate.dob[0]\r\n                        : \"\"}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Graduation Year\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.gradYear}\r\n                        onChange={(e) => setAccountData({...accountData, gradYear: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.v\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.gradYear\r\n                            ? validate.validate.gradYear[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    College Commitment\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder='College Commitment'\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.collegeCommitment}\r\n                        onChange={(e) => setAccountData({...accountData, collegeCommitment: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.collegeCommitment\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.collegeCommitment\r\n                            ? validate.validate.collegeCommitment[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Player Height\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.height}\r\n                        onChange={(e) => setAccountData({...accountData, height: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.height\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.height\r\n                            ? validate.validate.height[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Weight\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.weight}\r\n                        onChange={(e) => setAccountData({...accountData, Weight: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.Weight\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.Weight\r\n                            ? validate.validate.Weight[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Throw\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    defaultValue={user.result.pThrow}\r\n                    onChange={(e) => setAccountData({...accountData, pThrow: e.target.value})}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"      \r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option value=\"left\">left</option>\r\n                    <option value=\"right\">right</option>\r\n                    <option value=\"both\">both</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.pThrow\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.pThrow\r\n                            ? validate.validate.pThrow[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Bat\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    defaultValue={user.result.bat}\r\n                    onChange={(e) => setAccountData({...accountData, bat: e.target.value})}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option value=\"left\">left</option>\r\n                    <option value=\"right\">right</option>\r\n                    <option value=\"both\">both</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.bat\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.bat\r\n                            ? validate.validate.bat[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                        Primary Position\r\n                        </label>\r\n                        <select\r\n                        type=\"select\"\r\n                        defaultValue={user.result.primPosition}\r\n                        onChange={(e) => setAccountData({...accountData, primPosition: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        placeholder=\"Name\"\r\n                        >\r\n                        <option value=\"c\">C</option>\r\n                        <option value=\"1b\">1b</option>\r\n                        <option value=\"2nd\">2nd</option>\r\n                        <option value=\"ss\">ss</option>\r\n                        <option value=\"3b\">3b</option>\r\n                        <option value=\"of\">of</option>\r\n                        <option value=\"rhp\">rhp</option>\r\n                        <option value=\"lhp\">lhp</option>\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.primPosition\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.primPosition\r\n                                ? validate.validate.primPosition[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                        Secondary Position\r\n                        </label>\r\n                        <select\r\n                        type=\"select\"\r\n                        defaultValue={user.result.seconPosition}\r\n                        onChange={(e) => setAccountData({...accountData, seconPosition: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        placeholder=\"Name\"\r\n                        >\r\n                        <option value=\"c\">C</option>\r\n                        <option value=\"1b\">1b</option>\r\n                        <option value=\"2nd\">2nd</option>\r\n                        <option value=\"ss\">ss</option>\r\n                        <option value=\"3b\">3b</option>\r\n                        <option value=\"of\">of</option>\r\n                        <option value=\"rhp\">rhp</option>\r\n                        <option value=\"lhp\">lhp</option>\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.seconPosition\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.seconPosition\r\n                                ? validate.validate.seconPosition[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full col-12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Address\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.street}\r\n                        placeholder={\"Street Address\"}\r\n                        onChange={(e) => setAccountData({...accountData, street: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.street\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.street\r\n                            ? validate.validate.street[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        City\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.city}\r\n                        placeholder=\"City\"\r\n                        onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.city\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.city\r\n                            ? validate.validate.city[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    State\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        defaultValue={user.result.state}\r\n                        onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                        { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.state\r\n                            ? validate.validate.state[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Zipcode\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            defaultValue={user.result.zipcode}\r\n                            onChange={(e) => setAccountData({...accountData, zipcode: e.target.value})}\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.v\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.zipcode\r\n                                ? validate.validate.zipcode[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Parent Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent First\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.parentFirst}\r\n                        placeholder={\"Parent First\"}\r\n                        onChange={(e) => setAccountData({...accountData, parentFirst: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.parentFirst\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.parentFirst\r\n                            ? validate.validate.parentFirst[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Last\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.parentLast}\r\n                        placeholder=\"Parent Last\"\r\n                        onChange={(e) => setAccountData({...accountData, parentLast: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.parentLast\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.parentLast\r\n                            ? validate.validate.parentLast[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Email\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            defaultValue={user.result.parentEmail}\r\n                            placeholder=\"Parent Last\"\r\n                            onChange={(e) => setAccountData({...accountData, parentEmail: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.parentEmail\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.parentEmail\r\n                            ? validate.validate.parentEmail[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Phone\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            defaultValue={user.result.parentPhone}\r\n                            placeholder=\"Parent Last\"\r\n                            onChange={(e) => setAccountData({...accountData, parentPhone: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.parentPhone\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.parentPhone\r\n                            ? validate.validate.parentPhone[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <hr/>\r\n            <button\r\n            className=\"mt-10 col-12 btn-lg btn-success\"\r\n            type=\"button\"\r\n            onClick={update}\r\n            >\r\n                Save Updates\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerCard;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Form from \"utilities/Forms\";\r\nimport states from 'json/states';\r\nimport { updateuser } from 'actions/user';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n// components\r\n\r\nconst initialState = {\r\n    active: \"\", role: \"director\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", companyName: \"\", taxId: \"\",\r\n    street: \"\", city: \"\", state: \"\", zipcode: \"\", checkingName: \"\", checkingNum: \"\",\r\n    routingNum: \"\", fieldComplexName: \"\", numOfFields: \"\", fieldComplexCity: \"\", fieldComplexState: \"\"\r\n};\r\n\r\nconst DirectorCard = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [id, setId] = useState({});\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const location = useLocation();\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            companyName: {\r\n                value: accountData.companyName,\r\n                isRequired: true,\r\n            },\r\n            taxId: {\r\n                value: accountData.taxId,\r\n                isRequired: true,\r\n            },\r\n            street: {\r\n                value: accountData.street,\r\n                isRequired: true,\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n                maxLength: 2\r\n            },\r\n            zipcode: {\r\n                value: accountData.zipcode,\r\n                isRequired: true,\r\n            },\r\n            checkingName: {\r\n                value: accountData.checkingName,\r\n                isRequired: true,\r\n            },\r\n            checkingNum: {\r\n                value: accountData.checkingNum,\r\n                isRequired: true,\r\n            },\r\n            routingNum: {\r\n                value: accountData.routingNum,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexName: {\r\n                value: accountData.fieldComplexName,\r\n                isRequired: true,\r\n            },\r\n            numOfFields: {\r\n                value: accountData.numOfFields,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexCity: {\r\n                value: accountData.fieldComplexCity,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexState: {\r\n                value: accountData.fieldComplexState,\r\n                isRequired: true,\r\n            }\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        \r\n        window.scroll(0,0);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, companyName: \"\"});\r\n            setAccountData({...accountData, taxId: \"\"});\r\n            setAccountData({...accountData, street: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, zipcode: \"\"});\r\n            setAccountData({...accountData, checkingName: \"\"});\r\n            setAccountData({...accountData, checkingNum: \"\"});\r\n            setAccountData({...accountData, routingNum: \"\"});\r\n            setAccountData({...accountData, fieldComplexName: \"\"});\r\n            setAccountData({...accountData, numOfFields: \"\"});\r\n            setAccountData({...accountData, fieldComplexCity: \"\"});\r\n            setAccountData({...accountData, fieldComplexState: \"\"});\r\n            setAccountData({...accountData, active: user.result.active});\r\n            dispatch(updateuser(id, accountData));\r\n            setIsUpdated(true);\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n        setAccountData(user.result);\r\n        \r\n        setId(user.result._id);\r\n    }, [location]);\r\n\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <form>\r\n              {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isUpdated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Updated Successfully!</h2>\r\n                </div>:\"\"}\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            Tournament Director Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                \r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.firstName}\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                   Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.lastName}\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                        <Tooltip title=\"To update email. Please contact support\">\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              defaultValue={user.result.email}\r\n                              onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                          />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Phone Number\r\n                        </label>\r\n                        <input\r\n                        type=\"email\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.phoneNumber}\r\n                        onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.phoneNumber\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.phoneNumber\r\n                            ? validate.validate.phoneNumber[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Company Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.companyName}\r\n                        onChange={(e) => setAccountData({...accountData, companyName: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.companyName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.companyName\r\n                            ? validate.validate.companyName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Tax ID\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.taxId}\r\n                        onChange={(e) => setAccountData({...accountData, taxId: e.target.value})}\r\n                    />\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.v\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.taxId\r\n                            ? validate.validate.taxId[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full col-12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Address\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.street}\r\n                        placeholder={\"Street Address\"}\r\n                        onChange={(e) => setAccountData({...accountData, street: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.street\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.street\r\n                            ? validate.validate.street[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        City\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.city}\r\n                        placeholder=\"City\"\r\n                        onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.city\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.city\r\n                            ? validate.validate.city[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        State\r\n                        </label>\r\n                        <select\r\n                            type=\"select\"\r\n                            defaultValue={user.result.state}\r\n                            onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                            { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.state\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.state\r\n                                ? validate.validate.state[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Zipcode\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            defaultValue={user.result.zipcode}\r\n                            onChange={(e) => setAccountData({...accountData, zipcode: e.target.value})}\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.v\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.zipcode\r\n                                ? validate.validate.zipcode[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            The following is where we will deposit all of your team entry fees\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Name on checking account\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.checkingName}\r\n                        placeholder={\"Checking Name\"}\r\n                        onChange={(e) => setAccountData({...accountData, checkingName: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.checkingName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.checkingName\r\n                            ? validate.validate.checkingName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        DDA/Checking account number\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.checkingNum}\r\n                        placeholder=\"Parent Last\"\r\n                        onChange={(e) => setAccountData({...accountData, checkingNum: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.checkingNum\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.checkingNum\r\n                            ? validate.validate.checkingNum[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Routing Number\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            defaultValue={user.result.routingNum}\r\n                            placeholder=\"Parent Last\"\r\n                            onChange={(e) => setAccountData({...accountData, routingNum: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.routingNum\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.routingNum\r\n                            ? validate.validate.routingNum[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Name of field complex\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            defaultValue={user.result.fieldComplexName}\r\n                            placeholder=\"Parent Last\"\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexName: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.fieldComplexName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.fieldComplexName\r\n                            ? validate.validate.fieldComplexName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Number of fields \r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            defaultValue={user.result.numOfFields}\r\n                            placeholder=\"Parent Last\"\r\n                            onChange={(e) => setAccountData({...accountData, numOfFields: e.target.value})}\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.numOfFields\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.numOfFields\r\n                            ? validate.validate.numOfFields[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            City and State where fields/complex are located\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n            <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        City\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        defaultValue={user.result.city}\r\n                        placeholder=\"City\"\r\n                        onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.city\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.city\r\n                            ? validate.validate.city[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        State\r\n                        </label>\r\n                        <select\r\n                            type=\"select\"\r\n                            defaultValue={user.result.state}\r\n                            onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                            { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.state\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.state\r\n                                ? validate.validate.state[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <hr/>\r\n            <button\r\n            className=\"mt-10 col-12 btn-lg btn-success\"\r\n            type=\"button\"\r\n            onClick={update}\r\n            >\r\n                Save Updates\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DirectorCard;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Form from \"utilities/Forms\";\r\nimport decode from 'jwt-decode';\r\nimport { updateuser } from 'actions/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tooltip } from '@material-ui/core';\r\n// components\r\n  \r\nconst initialState = {\r\n    active: \"\", role: \"other\", userName: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\"\r\n};\r\n\r\n\r\nconst OtherCard = () => {\r\n  const [accountData, setAccountData] = useState(initialState);\r\n  const [validate, setValidate] = useState({});\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [id, setId] = useState({});\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(state => state.errors);\r\n\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            userName: {\r\n                value: accountData.userName,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            }\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n        window.scroll(0,0);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, userName: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, active: user.result.active});\r\n            dispatch(updateuser(id, accountData));\r\n            setIsUpdated(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime());\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n        setAccountData(user.result)\r\n        setId(user.result._id)\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <form>\r\n          {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isUpdated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Updated Successfully!</h2>\r\n                </div>:\"\"}\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Account Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    User Name\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.userName}\r\n                    onChange={(e) => setAccountData({...accountData, userName: e.target.value})}                    \r\n                    />\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.userName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.userName\r\n                        ? validate.validate.userName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.firstName}\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.lastName}\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                        <Tooltip title=\"To update email. Please contact support\">\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              defaultValue={user.result.email}\r\n                              onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                          />\r\n                        </Tooltip>\r\n                    </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Phone Number\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.phoneNumber}\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.phoneNumber\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.phoneNumber\r\n                      ? validate.validate.phoneNumber[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr/>\r\n            <button\r\n            className=\"mt-10 col-12 btn-lg btn-success\"\r\n            type=\"button\"\r\n            onClick={update}\r\n            >\r\n                Save Updates\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherCard;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Form from \"utilities/Forms\";\r\nimport { updateadmin } from 'actions/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tooltip } from '@material-ui/core';\r\n// components\r\n  \r\nconst initialState = {\r\n    role: \"admin\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\"\r\n};\r\n\r\n\r\nconst AdminCard = () => {\r\n  const [accountData, setAccountData] = useState(initialState);\r\n  const [validate, setValidate] = useState({});\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [id, setId] = useState({});\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n  const error = useSelector(state => state.errors);\r\n  const dispatch = useDispatch();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            }\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n        window.scroll(0,0);\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            dispatch(updateadmin(id, accountData));\r\n            setIsUpdated(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n        setAccountData(user.result);\r\n\r\n        setId(user.result._id);\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <form>\r\n          {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isUpdated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Updated Successfully!</h2>\r\n                </div>:\"\"}\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Account Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.firstName}\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.lastName}\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                        <Tooltip title=\"To update email. Please contact support\">\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              defaultValue={user.result.email}\r\n                              onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                          />\r\n                        </Tooltip>\r\n                    </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Phone Number\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    defaultValue={user.result.phoneNumber}\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.phoneNumber\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.phoneNumber\r\n                      ? validate.validate.phoneNumber[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr/>\r\n            <button\r\n            className=\"mt-10 col-12 btn-lg btn-success\"\r\n            type=\"button\"\r\n            onClick={update}\r\n            >\r\n                Save Updates\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCard;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TeamCard from \"../components/Cards/UsersProfileCards/TeamCard\";\r\nimport PlayerCard from '../components/Cards/UsersProfileCards/PlayerCard';\r\nimport DirectorCard from '../components/Cards/UsersProfileCards/DirectorCard';\r\nimport OtherCard from '../components/Cards/UsersProfileCards/OtherCard';\r\nimport AdminCard from '../components/Cards/UsersProfileCards/AdminCard';\r\n// components\r\n\r\nexport default function UserProfilePage() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [userActivity, setUserActivity] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n    setUserRole(user.result.role)\r\n    setUserActivity(user.result.active)\r\n}, [location]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0\">\r\n        <div className=\"rounded-t bg-white mb-0 px-6 py-6\">\r\n          <div className=\"text-center flex justify-between\">\r\n            <h6 className=\"text-blueGray-700 text-xl font-bold\">My account</h6>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n        {!userActivity && userRole !== \"admin\"? <div className='col-12 alert alert-warning font-bold'>\r\n              <i className=\"fas fa-exclamation-circle\"></i> You can update your details. However, you won't be able to take further actions until account is approved.\r\n            </div> : \"\"\r\n            }\r\n          {userRole === \"team\" ? <TeamCard />: \r\n          userRole === \"player\" ? <PlayerCard />: \r\n          userRole === \"director\" ? <DirectorCard />: \r\n          userRole === \"director\" ? <DirectorCard />:\r\n          userRole === \"other\" ? <OtherCard />:\r\n          userRole === \"admin\" ? <AdminCard />:\"\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\n// components\r\n\r\nexport default function UserImageCard() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n    setUserInfo(user.result)\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-xl rounded-lg mt-16\">\r\n        <div className=\"px-6\">\r\n          <div className=\"flex flex-wrap justify-center\">\r\n            <div className=\"w-full px-4 flex justify-center\">\r\n              <div className=\"relative\">\r\n              {!userInfo.profileImage ?\r\n              <Avatar className=\"mt-2 bg-danger font-bold\" style={{borderRadius: \"50%\", height:\"120px\", width:\"120px\"}}>{user?.result.firstName.charAt(0)} {user?.result.lastName.charAt(0) }</Avatar>\r\n              :\r\n              <img\r\n              alt=\"...\"\r\n              style={{height:\"200px\", width: \"160px\"}}\r\n              src={userInfo.profileImage}\r\n              className=\"shadow-xl rounded align-middle border-none -m-16 -ml-20 lg:-ml-16 max-w-150-px\"\r\n            />\r\n              }\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full px-4 text-center mt-5\">\r\n              <div className=\"flex justify-center py-4 lg:pt-4 pt-8\">\r\n                  <div className=\"relative text-center\">\r\n                    <h3 className=\"text-xl font-semibold leading-normal mb-2 text-blueGray-700 mb-2\">\r\n                      {userInfo.firstName} {userInfo.lastName}\r\n                    </h3>\r\n                    <div className=\"text-sm leading-normal mt-0 mb-2 text-blueGray-400 font-bold uppercase\">\r\n                      \r\n                      {userInfo.city && userInfo.state ? <div><i className=\"fas fa-map-marker-alt mr-2 text-lg text-blueGray-400\"></i> {userInfo.city}, {userInfo.state}</div>: \"\"}\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport UserProfilePage from \"views/UserProfilePage.js\";\r\nimport UserImageCard from \"components/Cards/UserImageCard.js\";\r\n// components\r\n\r\n\r\nexport default function UserDetails() {\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <div className=\"relative bg-lightBlue-600 md:pt-32 pb-32 pt-12\">\r\n        <div className=\"px-4 md:px-10 mx-auto w-full\">\r\n          <div>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-8/12 px-4\">\r\n                <UserProfilePage />\r\n              </div>\r\n              <div className=\"w-full lg:w-4/12 px-4\">\r\n                <UserImageCard />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateactivity } from 'actions/user';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\n\r\nconst UpdateActivityModal = ({ show, setShowModal, user, history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal show={show} >\r\n            <ModalHeader>\r\n                <ModalTitle>{user.active ? \"Please confirm you want to Deactivate this account.\"  : \"Please confirm you want to Activate this account.\"}</ModalTitle>\r\n            </ModalHeader>\r\n            <ModalFooter>\r\n                {user.active ?\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => dispatch(updateactivity(user._id, {...user, active:false}, history))}>CONFIRM</button>\r\n                    :\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => dispatch(updateactivity(user._id, {...user, active:true}, history))}>CONFIRM</button>\r\n                }\r\n                <button type=\"button\" className=\"modal-close btn btn-secondary\" onClick={() => setShowModal(false)}>close</button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UpdateActivityModal;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport UpdateActivityModal from 'components/Modals/UpdateActivityModal';\r\n\r\n// components\r\n\r\nconst SelectedTeamCard = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n    const [show, setShowModal] = useState(false);\r\n    window.scroll(0, 0);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('selectedUser')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n          <UpdateActivityModal active ={user.active} show = {show} setShowModal = {setShowModal} user = {user} history = {history}/>\r\n          <form>\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Account Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n            <div className=\"w-full lg:w-12/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Team Name\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.teamName}\r\n                    readOnly\r\n                    />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Head Coach Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                          <input\r\n                              readOnly\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              value={user.email}\r\n                          />\r\n                    </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach Phone Number\r\n                  </label>\r\n                  <input\r\n                    readOnly\r\n                    type=\"number\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.phoneNumber}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach First Name\r\n                  </label>\r\n                  <input\r\n                    readOnly\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.firstName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Head Coach Last Name\r\n                  </label>\r\n                  <input\r\n                    readOnly\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.lastName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    Age Group\r\n                  </label>\r\n                  <input\r\n                        readOnly\r\n                        type=\"select\"\r\n                        value={user.ageGroup}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                    </input>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Division\r\n                    </label>\r\n                    <input\r\n                        readOnly\r\n                        type=\"select\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"   \r\n                        value={user.division}\r\n                        >\r\n                     </input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    City\r\n                  </label>\r\n                  <input\r\n                    readOnly\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.city}\r\n                    placeholder=\"City\"\r\n                    />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    State\r\n                  </label>\r\n                  <input\r\n                        readOnly\r\n                        type=\"select\"\r\n                        value={user.state}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                    </input>\r\n                </div>\r\n              </div>\r\n              <hr/>\r\n              <div className=\"w-full px-4 text-center\">\r\n                <hr/>\r\n                  <div className=\"relative\">\r\n                    {user.active ? \r\n                      <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-danger\" variant=\"contained\">\r\n                      Deactivate\r\n                    </button>:\r\n                    <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-success\" variant=\"contained\">\r\n                      Activate\r\n                    </button>\r\n                      }\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedTeamCard;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport UpdateActivityModal from 'components/Modals/UpdateActivityModal';\r\n\r\n// components\r\n\r\nconst PlayerCard = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n    const [show, setShowModal] = useState(false);\r\n    window.scroll(0, 0);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('selectedUser')));        \r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n        <UpdateActivityModal active ={user.active} show = {show} setShowModal = {setShowModal} user = {user} history = {history}/>\r\n          <form>\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n              Player Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                \r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.firstName}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                   Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.lastName}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address  <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              value={user.email}\r\n                              readOnly\r\n                          />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Phone Number\r\n                        </label>\r\n                        <input\r\n                        type=\"email\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.phoneNumber}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    High School Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.highSchoolName}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative  mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Date of Birth\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150`}\r\n                        value={user.dob.slice(0, 10)}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Graduation Year\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.gradYear}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    college Commitment\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.collegeCommitment}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Player Height\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.height}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Weight\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.weight}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Throw\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={user.pThrow}\r\n                    readOnly\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"      \r\n                    >\r\n                    </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Bat\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={user.bat}\r\n                    readOnly\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    >\r\n                    </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                        Primary Position\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        value={user.primPosition}\r\n                        readOnly\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                        Secondary Position\r\n                        </label>\r\n                        <input\r\n                        type=\"select\"\r\n                        value={user.seconPosition}\r\n                        readOnly\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full col-12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Address\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.street}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        City\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.city}\r\n                            readOnly\r\n                            placeholder=\"City\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    State\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={user.state}\r\n                        readOnly\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        >\r\n                    </input>\r\n                </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Zipcode\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={user.zipcode}\r\n                            readOnly\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Parent Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent First\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.parentFirst}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Last\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.parentLast}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Email\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.parentEmail}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Parent Phone\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.parentPhone}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n            <hr/>\r\n            <div className=\"w-full px-4 text-center\">\r\n                <hr/>\r\n                  <div className=\"relative\">\r\n                  {user.active ? \r\n                      <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-danger\" variant=\"contained\">\r\n                      Deactivate\r\n                    </button>:\r\n                    <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-success\" variant=\"contained\">\r\n                      Activate\r\n                    </button>\r\n                      }\r\n                  </div>\r\n                  \r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerCard;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport UpdateActivityModal from 'components/Modals/UpdateActivityModal';\r\n\r\n// components\r\n\r\nconst SelectedDirectorCard = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n    const [show, setShowModal] = useState(false);\r\n    window.scroll(0, 0);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('selectedUser')));\r\n    }, [location]);\r\n\r\n\r\n    return (\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n        <UpdateActivityModal active ={user.active} show = {show} setShowModal = {setShowModal} user = {user} history = {history}/>\r\n          <form>\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            Tournament Director Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.firstName}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full lg:w-6/12 px-4\">\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                  >\r\n                   Last Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.lastName}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                        </label>\r\n                          <input\r\n                              disabled\r\n                              type=\"text\"\r\n                              className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                              value={user.email}\r\n                              readOnly\r\n                          />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Phone Number\r\n                        </label>\r\n                        <input\r\n                        type=\"email\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.phoneNumber}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Company Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.companyName}\r\n                        readOnly\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-6/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                    Tax ID\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.taxId}\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                Address Information\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full col-12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Address\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.street}\r\n                        readOnly\r\n                        placeholder={\"Street Address\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        City\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.city}\r\n                        readOnly\r\n                        placeholder=\"City\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        State\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={user.state}\r\n                            readOnly\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-4/12 px-4\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Zipcode\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={user.zipcode}\r\n                            readOnly\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            The following is where we will deposit all of your team entry fees\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Name on checking account\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.checkingName}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        DDA/Checking account number\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        value={user.checkingNum}\r\n                        readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Routing Number\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.routingNum}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Name of field complex\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.fieldComplexName}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Number of fields \r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.numOfFields}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n            <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            City and State where fields/complex are located\r\n            </h6>\r\n            <div className=\"flex flex-wrap\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    City\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                    value={user.city}\r\n                    readOnly\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                        className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        State\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={user.state}\r\n                            readOnly\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            <hr/>\r\n            <div className=\"w-full px-4 text-center\">\r\n                <hr/>\r\n                  <div className=\"relative\">\r\n                    {user.active ? \r\n                      <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-danger\" variant=\"contained\">\r\n                      Deactivate\r\n                    </button>:\r\n                    <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-success\" variant=\"contained\">\r\n                      Activate\r\n                    </button>\r\n                      }\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedDirectorCard;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport UpdateActivityModal from 'components/Modals/UpdateActivityModal';\r\n\r\n\r\n// components\r\n\r\n\r\nconst SelectedOtherCard = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n  const [show, setShowModal] = useState(false);\r\n  window.scroll(0, 0);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n      setUser(JSON.parse(localStorage.getItem('selectedUser')));\r\n  }, [location]);\r\n\r\n  return (\r\n      <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n        <UpdateActivityModal active ={user.active} show = {show} setShowModal = {setShowModal} user = {user} history = {history}/>\r\n        <form>\r\n          <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n            Account Information\r\n          </h6>\r\n          <div className=\"flex flex-wrap\">\r\n          <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                  className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                  htmlFor=\"grid-password\"\r\n                  >\r\n                  User Name\r\n                  </label>\r\n                  <input\r\n                  type=\"text\"\r\n                  className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                  value={user.userName}\r\n                  readOnly\r\n                  />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"relative w-full mb-3\">\r\n                <label\r\n                  className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                  htmlFor=\"grid-password\"\r\n                >\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                  value={user.firstName}\r\n                  readOnly\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"relative w-full mb-3\">\r\n                <label\r\n                  className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                  htmlFor=\"grid-password\"\r\n                >\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                  value={user.lastName}\r\n                  readOnly\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n                  <div className=\"relative w-full mb-3\">\r\n                      <label\r\n                          className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                      >\r\n                          Email Address <span style={{color:'red'}}>(used for Login)</span>\r\n                      </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                            value={user.email}\r\n                            readOnly\r\n                        />\r\n                  </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"relative w-full mb-3\">\r\n                <label\r\n                  className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\"\r\n                  htmlFor=\"grid-password\"\r\n                >\r\n                  Phone Number\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                  value={user.phoneNumber}\r\n                  readOnly\r\n                />\r\n              </div>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"w-full px-4 text-center\">\r\n                <hr/>\r\n                  <div className=\"relative\">\r\n                  {user.active ? \r\n                      <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-danger\" variant=\"contained\">\r\n                      Deactivate\r\n                    </button>:\r\n                    <button type=\"button\" onClick={() => setShowModal(true)} className=\"mt-10 col-md-8 btn-lg btn-success\" variant=\"contained\">\r\n                      Activate\r\n                    </button>\r\n                      }\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SelectedOtherCard;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport SelectedTeamCard from \"components/Cards/SelectedUserProfileCards/SelectedTeamCard\";\r\nimport SelectedPlayerCard from 'components/Cards/SelectedUserProfileCards/SelectedPlayerCard';\r\nimport SelectedDirectorCard from 'components/Cards/SelectedUserProfileCards/SelectedDirectorCard';\r\nimport SelectedOtherCard from 'components/Cards/SelectedUserProfileCards/SelectedOtherCard';\r\n\r\n// components\r\n\r\nexport default function SelectedUserProfilePage() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [userActivity, setUserActivity] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem('selectedUser')));\r\n    setUserRole(user.role)\r\n    setUserActivity(user.active)\r\n}, [location]);\r\n\r\nconst back = () => {\r\n  history.push(`/account/admin/users`)\r\n};\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0\">\r\n        <div className=\"rounded-t bg-white mb-0 px-6 py-6\">\r\n          <div className=\"text-center flex justify-between\">\r\n\r\n            <h6 className=\"text-blueGray-700 text-xl font-bold\">Account Info:</h6>\r\n            <button\r\n              className=\"btn-lg btn-secondary\"\r\n              type=\"button\"\r\n              onClick={back}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n          \r\n        </div>\r\n        {!userActivity ? <div className='col-12 alert alert-danger font-bold'>\r\n              <i className=\"fas fa-exclamation-circle\"></i> This account is NOT Active yet. to Activate, Click <span className='text-success'>ACTIVATE</span>  in the bottom.\r\n            </div> : <div className='col-12 alert alert-success font-bold'>\r\n              <i className=\"fas fa-exclamation-circle\"></i> This account is ACTIVE. to deactivate, click <span className='text-danger'>DEACTIVATE</span> in the bottom.\r\n            </div>\r\n            }\r\n          {userRole === \"team\" ? <SelectedTeamCard />: \r\n          userRole === \"player\" ? <SelectedPlayerCard />: \r\n          userRole === \"director\" ? <SelectedDirectorCard />: \r\n          userRole === \"other\" ? <SelectedOtherCard />:\"\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SelectedUserProfilePage from \"views/SelectedUserProfilePage.js\";\r\n// import SelectedUserImageCard from \"components/Cards/UserImageCard.js\";\r\n// components\r\n\r\n\r\nexport default function SelectedUserDetails() {\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <div className=\"relative bg-lightBlue-600 md:pt-32 pb-32 pt-12\">\r\n        <div className=\"px-4 md:px-10 mx-auto w-full\">\r\n          <div>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"w-full lg:w-8/12 px-4\">\r\n                <SelectedUserProfilePage />\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"relative bg-blueGray-200 pt-8 pb-6\">\r\n        <div\r\n          className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\r\n          style={{ transform: \"translateZ(0)\" }}\r\n        >\r\n          <svg\r\n            className=\"absolute bottom-0 overflow-hidden\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            preserveAspectRatio=\"none\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 2560 100\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n          >\r\n            <polygon\r\n              className=\"text-blueGray-200 fill-current\"\r\n              points=\"2560 0 2560 100 0 100\"\r\n            ></polygon>\r\n          </svg>\r\n        </div>\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"flex flex-wrap text-center lg:text-left\">\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <h4 className=\"text-3xl font-semibold\">Let's keep in touch!</h4>\r\n              <h5 className=\"text-lg mt-0 mb-2 text-blueGray-600\">\r\n                Find us on any of these platforms, we respond 1-2 business days.\r\n              </h5>\r\n              <div className=\"mt-6 lg:mb-0 mb-6\">\r\n                <button\r\n                  className=\"bg-white text-lightBlue-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"bg-white text-lightBlue-600 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-facebook-square\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"bg-white text-pink-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-dribbble\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"bg-white text-blueGray-800 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-github\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"flex flex-wrap items-top mb-6\">\r\n                <div className=\"w-full lg:w-4/12 px-4 ml-auto\">\r\n                  <span className=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\">\r\n                    Useful Links\r\n                  </span>\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>\r\n                      <Link\r\n                          to=\"/aboutus\"\r\n                          className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n\r\n                        >\r\n                        About Us\r\n                      </Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                      <a\r\n                        className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                        href=\"/rules\"\r\n                      >\r\n                        Privacy Policy\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <Link\r\n                            to=\"/contactus\"\r\n                            className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n\r\n                          >\r\n                          Contact Us\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr className=\"my-6 border-blueGray-300\" />\r\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n            <div className=\"w-full md:w-4/12 px-4 mx-auto text-center\">\r\n            <div className=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n                Copyright © {new Date().getFullYear()} 4 Bagger USA.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"assets/img/logo.png\";\r\n\r\nimport UserDropdown from \"components/Dropdowns/UserDropdown.js\";\r\n\r\nexport default function DirectorSidebar() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\r\n\r\n  useEffect(() => {\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\r\n        <div className=\"\">\r\n          {/* Toggler */}\r\n          <button\r\n            className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n            type=\"button\"\r\n            onClick={() => collapseShow === \"hidden\"?  setCollapseShow(\"bg-white m-2 py-3 px-6\"): setCollapseShow(\"hidden\")}\r\n          >\r\n            {collapseShow === \"hidden\"?<i className=\"fas fa-bars\"></i>:<i className=\"fas fa-times\"></i>}\r\n          </button>\r\n          {/* Brand */}\r\n          <Link\r\n            className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            to=\"/\"\r\n          >\r\n            <img src={Logo} style={{height:'85px'}}/>\r\n          </Link>\r\n          {/* User */}\r\n          <ul className=\"mt-1 md:hidden items-center flex flex-wrap list-none\">\r\n            <li className=\"inline-block relative\">\r\n              <UserDropdown />\r\n            </li>\r\n          </ul>\r\n          {/* Collapse */}\r\n          <div\r\n            className={\r\n              \"md:flex md:flex-col md:items-stretch md:opacity-100 top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded \" +\r\n              collapseShow\r\n            }\r\n          >\r\n            {/* Collapse header */}\r\n            <div className=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\">\r\n              <div className=\"flex flex-wrap\">\r\n              </div>\r\n            </div>\r\n\r\n            {/* Heading */}\r\n            <h6 className=\"col-md-12 text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\">\r\n              Menu\r\n            </h6>\r\n            {/* Navigation */}\r\n\r\n            <ul className=\"col-md-12 md:flex-col md:min-w-full flex flex-col list-none\">\r\n                <Link\r\n                  className={\r\n                    \"text-xs uppercase py-3 font-bold block \" +\r\n                    (window.location.href.indexOf(\"/admin/dashboard\") !== -1\r\n                      ? \"text-lightBlue-500 hover:text-lightBlue-600\"\r\n                      : \"text-blueGray-700 hover:text-blueGray-500\")\r\n                  }\r\n                  to={`/account/admin/${user.result._id}`}\r\n                >\r\n                  <i className=\"fas fa-tools text-info mr-2 text-sm \" />\r\n                  Update Details\r\n                </Link>\r\n\r\n                <Link\r\n                  className={\r\n                    \"text-xs uppercase py-3 font-bold block \" +\r\n                    (window.location.href.indexOf(\"/admin/maps\") !== -1\r\n                      ? \"text-lightBlue-500 hover:text-lightBlue-600\"\r\n                      : \"text-blueGray-700 hover:text-blueGray-500\")\r\n                  }\r\n                  to={`/account/admin/users`}\r\n                >\r\n                  <i className=\"fas mr-2 text-info fa-users\" />\r\n                  Users\r\n                </Link>\r\n            </ul>\r\n\r\n            {/* Divider */}\r\n            <hr className=\"my-4 md:min-w-full\" />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GoBack = () => {\r\n    return (\r\n        <section className=\"header relative py-20  overflow-hidden\" >\r\n            <div className=\"container mx-auto pb-40\" style={{paddingTop:\"40px\"}}>\r\n                <div className=\"flex flex-wrap justify-center\">\r\n                    <div className=\"w-full relative md:w-5/12 px-12 md:px-4 ml-auto mr-auto md:mt-64\">\r\n                        <h2 className=\"text-lg\">No Events Yet :(</h2>\r\n                    <Link\r\n                        to=\"/EventsMainPage\"\r\n                        className=\"github-star mt-4 inline-block text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-secondary text-white active:bg-blueGray-600 uppercase text-sm shadow hover:shadow-lg\"\r\n                    >\r\n                        Go Back\r\n                    </Link>\r\n                    </div>\r\n                    <div className=\"w-full md:w-4/12 px-4 mr-auto ml-auto mt-32 relative\">\r\n                    <i className=\"fa fa-baseball-ball text-danger absolute -top-150-px -right-100 left-auto opacity-80 text-55\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default GoBack;\r\n    ","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { getusers } from \"actions/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport GoBack from \"views/GoBackPage\";\r\nimport { getuser } from \"actions/user\";\r\n\r\n// components\r\nexport default function UsersTable({ color }) {\r\n  const dispatch = useDispatch();\r\n  window.scroll(0, 0);\r\n  const users = useSelector((state) => state.users);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const handleNameClick = (user) => {\r\n    dispatch(getuser(user._id, history));\r\n  };\r\n\r\n  useEffect(() => {    \r\n    dispatch(getusers());\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{marginBottom: users.length === 0 ?\"122px\":\"0\"}}\r\n        className={\r\n          \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" +\r\n          (color === \"light\" ? \"bg-white\" : \"bg-lightBlue-900 text-white\")\r\n        }\r\n      >\r\n        <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n          <div className=\"flex flex-wrap items-center\">\r\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n              <h3\r\n                className={\r\n                  \"font-semibold text-lg \" +\r\n                  (color === \"light\" ? \"text-blueGray-700\" : \"text-white\")\r\n                }\r\n              >\r\n                Accounts List\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"block w-full overflow-x-auto\">\r\n          {/* Projects table */}\r\n          <table className=\"items-center col-12 bg-transparent border-collapse \">\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Full Name\r\n                </th>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Role\r\n                </th>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Email Address\r\n                </th>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Phone Number\r\n                </th>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Status\r\n                </th>\r\n                <th\r\n                  className={\r\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left \" +\r\n                    (color === \"light\"\r\n                      ? \"bg-blueGray-50 text-blueGray-500 border-blueGray-100\"\r\n                      : \"bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\")\r\n                  }\r\n                >\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n              {users ? users.map((user) => (\r\n                 <tbody key={user._id}> \r\n                <tr>\r\n                  <th>\r\n                    <button type=\"button\" onClick={() => handleNameClick(user)} className=\"btn-outline-info border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center\">\r\n                    {user.profileImage?<img\r\n                          src={user.profileImage}\r\n                          className=\"h-12 w-12 bg-white rounded-full border\"\r\n                          alt=\"...\"\r\n                        ></img>:user.firstName ? <Avatar className=\"bg-danger font-bold\">{user.firstName.charAt(0)}</Avatar>:<Avatar className=\"bg-danger font-bold\"></Avatar>}\r\n                        \r\n                        <span\r\n                          className={\r\n                            \"ml-3 font-bold \" +\r\n                            +(color === \"light\" ? \"text-blueGray-600\" : \"text-white\")\r\n                          }\r\n                        >\r\n                            {user.role === \"team\" ? user.firstName + \" \" + user.lastName + \" / \" + user.teamName:user.firstName + \" \" + user.lastName}\r\n\r\n                        </span>\r\n                      </button>\r\n                  </th>\r\n                  <td className=\"uppercase border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                    {user.role === \"team\" ? \"Head Coach / Team\": user.role}\r\n                  </td>\r\n                  <td className=\"uppercase border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                    {user.email}\r\n                  </td>\r\n                  <td className=\"uppercase border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                    {user.phoneNumber}\r\n                  </td>\r\n                  <td className=\"uppercase border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                    {user.active ? <i className=\"fas fa-circle text-success mr-2\"> Active</i> :<i className=\"fas fa-circle text-danger mr-2\"> Inactive</i>}\r\n                  </td>\r\n                  <td className=\"border-t-0  align-middle border-l-0 border-r-0 text-xs whitespace-nowrap \">\r\n                    <button  onClick={() => handleNameClick(user)} className=\"btn btn-primary\" variant=\"contained\">\r\n                      View Details / Manage Activation\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                \r\n              </tbody> \r\n              )):<GoBack />}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nUsersTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};\r\n\r\n","import React from \"react\";\r\n\r\n// components\r\n\r\nimport UsersTable from \"../../../Tables/UsersTable\";\r\n\r\nexport default function UserActivity() {\r\n  return (\r\n    <>\r\n        <div className=\"relative bg-lightBlue-600 md:pt-32 pb-32 pt-12\">\r\n            <div className=\"px-4 md:px-10 mx-auto w-full\">\r\n            <div>\r\n                <div className=\"flex flex-wrap \">\r\n                    <div className=\"w-full  px-4\" style={{marginBottom: \"172px\"}}>\r\n                        <UsersTable />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import { CREATE, FETCH_ALL, ADD_ERROR, CLEAR_ERROR, FETCH_ONE_EVENT} from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\n// Create event\r\nexport const createevent = (formData) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.createEvent(formData);\r\n  \r\n      dispatch({ type: CREATE, payload: data });\r\n      dispatch({ type: CLEAR_ERROR });\r\n      setInterval(await window.location.reload(), 20000);\r\n      window.scroll(0,0);\r\n    } catch (error) {\r\n      await api.createError(error.response.data);\r\n\r\n      dispatch({ type: ADD_ERROR, payload: error.response.data.message})  \r\n    }\r\n  };\r\n\r\n// Get all events\r\nexport const getevents = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getEvents();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})  \r\n  }\r\n};\r\n\r\nexport const getevent = (id, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getEvent(id);\r\n\r\n    dispatch({ type: FETCH_ONE_EVENT, payload: data });\r\n    router.push(`/Events/tournaments/${data.eventName}`);\r\n\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message});\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport states from 'json/states';\r\nimport Form from \"utilities/Forms\";\r\nimport { createevent } from 'actions/event';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport FileBase from 'react-file-base64';\r\n\r\n\r\nconst initialState = {\r\n    eventImage: \"\", createdBy: \"\", live: false, eventName: \"\", startDate: \"\", endDate: \"\", costPerTeam: \"\", gateFee: \"\", entryFee: \"\", ageGroup: \"\", maxTeamsNum: \"\", fieldComplexName: \"\",\r\n    fieldComplexStreet: \"\", fieldComplexState: \"\", fieldComplexCity: \"\", fieldComplexZipcode: \"\", gameFormat: \"\"\r\n};\r\n\r\nconst CreateEventForm = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [isCreated, setIsCreated] = useState(false);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            eventName: {\r\n                value: accountData.eventName,\r\n                isRequired: true,\r\n            },\r\n            eventImage: {\r\n                value: accountData.eventImage,\r\n                isRequired: true,\r\n            },\r\n            startDate: {\r\n                value: accountData.startDate,\r\n                isRequired: true,\r\n            },\r\n            endDate: {\r\n                value: accountData.startDate,\r\n                isRequired: true,\r\n            },\r\n            ageGroup: {\r\n                value: accountData.ageGroup,\r\n                isRequired: true,\r\n            },\r\n            maxTeamsNum: {\r\n                value: accountData.maxTeamsNum,\r\n                isRequired: true,\r\n            },\r\n            costPerTeam: {\r\n                value: accountData.costPerTeam,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexName: {\r\n                value: accountData.fieldComplexName,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexStreet: {\r\n                value: accountData.fieldComplexStreet,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexCity: {\r\n                value: accountData.fieldComplexCity,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexState: {\r\n                value: accountData.fieldComplexState,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexZipcode: {\r\n                value: accountData.fieldComplexZipcode,\r\n                isRequired: true,\r\n            },\r\n            gameFormat: {\r\n                value: accountData.gameFormat,\r\n                isRequired: true,\r\n            },\r\n            gateFee: {\r\n                value: accountData.gateFee,\r\n                isRequired: true,\r\n            },\r\n            entryFee: {\r\n                value: accountData.entryFee,\r\n                isRequired: true,\r\n            },\r\n        });\r\n\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const create = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(accountData);\r\n        \r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, createdBy: user.result.firstName + ' ' + user.result.lastName});\r\n            setAccountData({...accountData, eventName: \"\"});\r\n            setAccountData({...accountData, eventImage: \"\"});\r\n            setAccountData({...accountData, startDate: \"\"});\r\n            setAccountData({...accountData, endDate: \"\"});\r\n            setAccountData({...accountData, fieldComplexName: \"\"});\r\n            setAccountData({...accountData, fieldComplexStreet: \"\"});\r\n            setAccountData({...accountData, fieldComplexCity: \"\"});\r\n            setAccountData({...accountData, fieldComplexState: \"\"});\r\n            setAccountData({...accountData, fieldComplexZipcode: \"\"});\r\n            setAccountData({...accountData, maxTeamsNum: \"\"});\r\n            setAccountData({...accountData, ageGroup: \"\"});\r\n            setAccountData({...accountData, costPerTeam: \"\"});\r\n            setAccountData({...accountData, gameFormat: \"\"});\r\n            setAccountData({...accountData, entryFee: \"\"});\r\n            setAccountData({...accountData, gateFee: \"\"});\r\n\r\n\r\n            window.scroll(0,0);\r\n            setIsCreated(true);\r\n            dispatch(createevent(accountData));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n        setAccountData({...accountData, createdBy: user.result.firstName + ' ' + user.result.lastName});\r\n    }, [location]);\r\n    \r\n    return(\r\n        <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0 bg-white rounded\">\r\n          <form>\r\n              <hr className=''/>\r\n            <h6 className=\"text-warning text-xs mt-3 mb-6 font-bold text-xl\">\r\n              Create New Tournament\r\n            </h6>\r\n            {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\r\n                isCreated ? <div className=\"alert mt-1 uppercase alert-success\" role=\"alert\">\r\n                    <h2><span className='text-success font-bold'>SUCCESS</span>: Created Successfully!</h2>\r\n                </div>:\"\"}\r\n            <div className=\"\">\r\n\r\n                <div className='row'>\r\n                    <div className=\"relative col-md-12 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Tournament Image <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <FileBase\r\n                            type=\"file\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.eventImage\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            defaultValue={user.result.eventImage}\r\n                            onDone={({base64}) => setAccountData({...accountData, eventImage: base64})}\r\n                            multiple={false}\r\n                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.eventImage\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.eventImage\r\n                            ? validate.validate.eventImage[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Event Name <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.eventName\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.eventName}\r\n                            placeholder=\"Event Name\"\r\n                            onChange={(e) => setAccountData({...accountData, eventName: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.eventName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.eventName\r\n                            ? validate.validate.eventName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-3 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Start Date <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"date\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.startDate\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.startDate}\r\n                            placeholder=\"Last Name\"\r\n                            onChange={(e) => setAccountData({...accountData, startDate: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.startDate\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.startDate\r\n                            ? validate.validate.startDate[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative col-md-3 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            End Date <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"date\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.endDate\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.endDate}\r\n                            placeholder=\"Last Name\"\r\n                            onChange={(e) => setAccountData({...accountData, endDate: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.endDate\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.endDate\r\n                            ? validate.validate.endDate[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div className='row'>\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Cost Per Team <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.costPerTeam\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            id=\"costPerTeam\"\r\n                            value={accountData.costPerTeam}\r\n                            placeholder=\"Cost per team\"\r\n                            onChange={(e) =>setAccountData({...accountData, costPerTeam: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.costPerTeam\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.costPerTeam\r\n                            ? validate.validate.costPerTeam[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Entry Fee <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.entryFee\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            id=\"entryFee\"\r\n                            value={accountData.entryFee}\r\n                            placeholder=\"Cost per team\"\r\n                            onChange={(e) =>setAccountData({...accountData, entryFee: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.entryFee\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.entryFee\r\n                            ? validate.validate.entryFee[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Gate Fee <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.gateFee\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            id=\"gateFee\"\r\n                            value={accountData.gateFee}\r\n                            placeholder=\"Cost per team\"\r\n                            onChange={(e) =>setAccountData({...accountData, gateFee: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.gateFee\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.gateFee\r\n                            ? validate.validate.gateFee[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                        className=\"block uppercase  text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Age group <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <select\r\n                            type=\"select\"\r\n                            onChange={(e) => setAccountData({...accountData, ageGroup: e.target.value})}\r\n                            className={`form-control ${\r\n                                validate.validate && validate.validate.ageGroup\r\n                                    ? \"is-invalid \"\r\n                                    : \"\"\r\n                            }`}\r\n                            placeholder=\"Name\"\r\n                            >\r\n                            <option defaultValue={true} value=\"\">Select Age Group..</option>\r\n                            <option value=\"5u\">5U</option>\r\n                            <option value=\"6u\">6U</option>\r\n                            <option value=\"7u\">7U</option>\r\n                            <option value=\"8u\">8U</option>\r\n                            <option value=\"9u\">9U</option>\r\n                            <option value=\"10u\">10U</option>\r\n                            <option value=\"11u\">11U</option>\r\n                            <option value=\"12u\">12U</option>\r\n                            <option value=\"13u\">13U</option>\r\n                            <option value=\"14u\">14U</option>\r\n                            <option value=\"15u\">15U</option>\r\n                            <option value=\"16u\">16U</option>\r\n                            <option value=\"175u\">17U</option>\r\n                            <option value=\"18u\">18U</option>\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.ageGroup\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.ageGroup\r\n                                ? validate.validate.ageGroup[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Max Teams Number <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.maxTeamsNum\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            id=\"maxTeamsNum\"\r\n                            name=\"maxTeamsNum\"\r\n                            value={accountData.maxTeamsNum}\r\n                            placeholder=\"Max teams number\"\r\n                            onChange={(e) =>setAccountData({...accountData, maxTeamsNum: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.maxTeamsNum\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.maxTeamsNum\r\n                            ? validate.validate.maxTeamsNum[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative col-md-4 col-xs-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            name of field complex <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.fieldComplexName\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.fieldComplexName}\r\n                            placeholder=\"name of field complex\"\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexName: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.fieldComplexName\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.fieldComplexName\r\n                            ? validate.validate.fieldComplexName[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                        <label\r\n                        className=\"block uppercase  text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                        >\r\n                        Game Format <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <select\r\n                            type=\"select\"\r\n                            onChange={(e) => setAccountData({...accountData, gameFormat: e.target.value})}\r\n                            className={`form-control ${\r\n                                validate.validate && validate.validate.gameFormat\r\n                                    ? \"is-invalid \"\r\n                                    : \"\"\r\n                            }`}\r\n                            placeholder=\"Name\"\r\n                            >\r\n                            <option defaultValue={true} value=\"\">Select Game Format..</option>\r\n                            <option value=\"2pool\">2 pool play games into single elimination</option>\r\n                            <option value=\"3pool\">3 pool play games into single elimination</option>\r\n                            <option value=\"4game\"> 4 game guaranty</option>\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.gameFormat\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.gameFormat\r\n                                ? validate.validate.gameFormat[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n        \r\n                <hr/><br/>\r\n                <span className=\"uppercase text-info font-bold\">address: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n                <div className='row'>\r\n                    <div className=\"relative col-12 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            Street <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.fieldComplexStreet\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.fieldComplexStreet}\r\n                            placeholder=\"123 E Main ST\"\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexStreet: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.fieldComplexStreet\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.fieldComplexStreet\r\n                            ? validate.validate.fieldComplexStreet[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            City <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.fieldComplexCity\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.fieldComplexCity}\r\n                            placeholder=\"city\"\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexCity: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.fieldComplexCity\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.fieldComplexCity\r\n                            ? validate.validate.fieldComplexCity[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 mb-3\">\r\n                        <label\r\n                            className=\"block uppercase  text-xs font-bold mb-2\"\r\n                            htmlFor=\"grid-password\"\r\n                        >\r\n                            State <span style={{color:'red'}}>*</span>\r\n                        </label>\r\n                        <select\r\n                            type=\"select\"\r\n                            value={accountData.fieldComplexState}\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexState: e.target.value})}\r\n                            className={`form-control ${\r\n                                validate.validate && validate.validate.fieldComplexState\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            >\r\n                            <option defaultValue={true} value=\"\">-- State --</option>\r\n                            { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                        </select>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                                validate.validate && validate.validate.fieldComplexState\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                            >\r\n                            {validate.validate && validate.validate.fieldComplexState\r\n                                ? validate.validate.fieldComplexState[0]\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"relative col-md-4 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase  text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Zip Code <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-xs shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                                validate.validate && validate.validate.fieldComplexZipcode\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            value={accountData.fieldComplexZipcode}\r\n                            placeholder=\"Zipcode\"\r\n                            onChange={(e) => setAccountData({...accountData, fieldComplexZipcode: e.target.value})}\r\n                        />\r\n\r\n                        <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.fieldComplexZipcode\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.fieldComplexZipcode\r\n                            ? validate.validate.fieldComplexZipcode[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <hr/>\r\n\r\n                <div className=\"text-center mt-6\">\r\n                    <button\r\n                        className=\"bg-success text-white active:bg-blueGray-600 sx font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                        onClick={create}\r\n                    >\r\n                        Create Tournament\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreateEventForm;","import React from \"react\";\r\n\r\n// components\r\n\r\nimport CreateEventForm from \"components/Forms/CreateEventForm\";\r\n\r\nexport default function CreateEvent() {\r\n  return (\r\n    <>\r\n        <div className=\"relative bg-lightBlue-600 md:pt-32 pb-32 pt-12\">\r\n            <div className=\"px-4 md:px-10 mx-auto w-full\">\r\n              <div>\r\n                  <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-full mb-12 px-4\">\r\n                          <CreateEventForm />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"assets/img/logo.png\";\r\n\r\nimport UserDropdown from \"components/Dropdowns/UserDropdown.js\";\r\nimport {Tooltip} from '@material-ui/core';\r\n\r\nexport default function DirectorSidebar() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\r\n\r\n  useEffect(() => {\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\r\n        <div className=\"\">\r\n          {/* Toggler */}\r\n          <button\r\n            className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n            type=\"button\"\r\n            onClick={() => collapseShow === \"hidden\"?  setCollapseShow(\"bg-white m-2 py-3 px-6\"): setCollapseShow(\"hidden\")}\r\n          >\r\n            {collapseShow === \"hidden\"?<i className=\"fas fa-bars\"></i>:<i className=\"fas fa-times\"></i>}\r\n          </button>\r\n          {/* Brand */}\r\n          <Link\r\n            className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            to=\"/\"\r\n          >\r\n            <img src={Logo} style={{height:'85px'}}/>\r\n          </Link>\r\n          {/* User */}\r\n          <ul className=\"mt-1 md:hidden items-center flex flex-wrap list-none\">\r\n            <li className=\"inline-block relative\">\r\n              <UserDropdown />\r\n            </li>\r\n          </ul>\r\n          {/* Collapse */}\r\n          <div\r\n            className={\r\n              \"md:flex md:flex-col md:items-stretch md:opacity-100 top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded \" +\r\n              collapseShow\r\n            }\r\n          >\r\n            {/* Collapse header */}\r\n            <div className=\"md:min-w-full md:hidden block pb-4 mb-4 border-b border-solid border-blueGray-200\">\r\n              <div className=\"flex flex-wrap\">\r\n              </div>\r\n            </div>\r\n\r\n            {/* Heading */}\r\n            <h6 className=\"col-md-12 row text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\">\r\n              Menu\r\n            </h6>\r\n            {/* Navigation */}\r\n\r\n            <ul className=\"col-md-12 row md:flex-col md:min-w-full flex flex-col list-none\">\r\n                <Link\r\n                  className={\r\n                    \"text-xs uppercase py-3 font-bold block \" +\r\n                    (window.location.href.indexOf(\"/admin/dashboard\") !== -1\r\n                      ? \"text-lightBlue-500 hover:text-lightBlue-600\"\r\n                      : \"text-blueGray-700 hover:text-blueGray-500\")\r\n                  }\r\n                  to={`/account/${user.result._id}`}\r\n                >\r\n                  <i className=\"fas text-info fa-tools mr-2 text-sm \" />\r\n                  Update Details\r\n                </Link>\r\n                  <Tooltip title={user.result.active ? \"\" : \"Account is pending approval\"}>\r\n                  <Link \r\n                  className={\r\n                    \"text-xs uppercase py-3 font-bold block \" +\r\n                    (window.location.href.indexOf(\"/admin/maps\") !== -1\r\n                      ? \"text-lightBlue-500 hover:text-lightBlue-600\"\r\n                      : \"text-blueGray-700 hover:text-blueGray-500\")\r\n                  }\r\n                  to={user.result.active ? `/account/${user.result._id}/createtournament`:`/account/${user.result._id}`}\r\n                >\r\n                  <i className=\"fa text-info fa-baseball-ball mr-2 text-sm \" />\r\n                  Create Tournament\r\n                </Link>\r\n                  </Tooltip>\r\n                \r\n            </ul>\r\n\r\n            {/* Divider */}\r\n            <hr className=\"my-4 md:min-w-full\" />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useLocation, useHistory } from \"react-router-dom\";\r\n\r\n// components\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport UserDetails from \"dashboard/UserDetails\";\r\nimport SelectedUserDetails from \"dashboard/SelectedUserDetails\";\r\nimport FooterAdmin from \"components/Footers/FooterAdmin.js\";\r\nimport AdminSidebar from 'components/Sidebar/AdminSidebar';\r\nimport UserActivity from 'components/Cards/userActionsCards/AdminActions/UserActivity';\r\nimport CreateEvent from 'components/Cards/userActionsCards/DirectorActions/CreateEvent';\r\nimport DirectorSidebar from 'components/Sidebar/DirectorSidebar';\r\n\r\n// views\r\n\r\nexport default function Account() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const [selectedUser, setSelectedUser] = useState(JSON.parse(localStorage.getItem('selectedUser')));\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const routing = (route) => {\r\n    history.push(route);\r\n  }\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    setSelectedUser(JSON.parse(localStorage.getItem('selectedUser')));\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n    {\r\n    !user?routing(`/auth/login`):\r\n    <>\r\n      {user?.result.role === 'admin' ? <AdminSidebar />:user?.result.role === 'director' ? <DirectorSidebar />:<Sidebar />}\r\n      <div className=\"relative md:ml-64 bg-blueGray-100\">\r\n        <AdminNavbar />\r\n        {/* Header */}\r\n        <Switch>\r\n          <Route exact path={`/account/admin/users`} component={UserActivity} />\r\n          {selectedUser? <Route exact path={`/account/users/${selectedUser.firstName}`} component={SelectedUserDetails} /> : \"\"}\r\n          <Route exact path={`/account/${user.result._id}/createtournament`} component={CreateEvent} />\r\n          <Route exact path={`/account/${user?.result.role === 'admin' ? \"admin/\":\"\"}${user.result._id}`} component={UserDetails} />\r\n          <Route exact path={`/account/${user?.result.role === 'admin' ? \"admin/\":\"\"}`} component={UserDetails} />\r\n        </Switch>\r\n      <FooterAdmin />\r\n      </div>\r\n      </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"assets/img/logo.png\";\r\n// components\r\n\r\nimport EventsDropdown from \"components/Dropdowns/EventsDropdown.js\";\r\n\r\nexport default function Navbar(props) {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\",\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n  return (\r\n    <>\r\n      <nav className=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\">\r\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\r\n            >\r\n              <img src={Logo} style={{height:'85px'}}/>\r\n            </Link>\r\n            <button\r\n              className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              <i className=\"fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={\r\n              \"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\" +\r\n              (navbarOpen ? \" block\" : \" hidden\")\r\n            }\r\n            id=\"example-navbar-warning\"\r\n          >\r\n            <ul className=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"/\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n              <EventsDropdown />\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"\"\r\n                >\r\n                  Live Events\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Players\r\n                </Link>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/landing\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  About Us\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/rules\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Rules\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/contactus\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                    Contact Us\r\n                  </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                  to=\"/auth/login\"\r\n                  className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt fa-fw\"></i>&nbsp;\r\n                  Login\r\n                </Link>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                  to=\"/auth/signup\"\r\n                  className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                >\r\n                  <i className=\"fa fa-user-plus fa-fw\"></i>&nbsp;\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function FooterSmall(props) {\r\n  return (\r\n    <>\r\n      <footer\r\n        className={\r\n          (props.absolute\r\n            ? \"absolute w-full bottom-0 bg-blueGray-800\"\r\n            : \"relative\") + \" pb-6\"\r\n        }\r\n      >\r\n        <div className=\"container mx-auto px-4\">\r\n          <hr className=\"mb-6 border-b-1 border-blueGray-600\" />\r\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n            <div className=\"w-full md:w-4/12 px-4\">\r\n            <div className=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n                Copyright © {new Date().getFullYear()} 4 Bagger USA.\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-8/12 px-4\">\r\n              <ul className=\"flex flex-wrap list-none md:justify-end  justify-center\">\r\n                <li>\r\n                  <a\r\n                    href=\"https://www.creative-tim.com?ref=nr-footer-small\"\r\n                    className=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n                  >\r\n                    Creative Tim\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                      to=\"/aboutus\"\r\n                      className=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n                    >\r\n                    About Us\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"http://blog.creative-tim.com?ref=nr-footer-small\"\r\n                    className=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n                  >\r\n                    Blog\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://github.com/creativetimofficial/notus-react/blob/main/LICENSE.md?ref=nr-footer-small\"\r\n                    className=\"text-white hover:text-blueGray-300 text-sm font-semibold block py-1 px-3\"\r\n                  >\r\n                    MIT License\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import { ADD_ERROR, AUTH, CLEAR_ERROR } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n    dispatch({ type: AUTH, data });\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\nexport const adminsignin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.adminSignin(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n    router.push(`/account/admin/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\nexport const directorsignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.directorSignUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\n\r\nexport const playersignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.playerSignUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})  \r\n  }\r\n};\r\n\r\nexport const teamsignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.teamSignUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\nexport const othersignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.otherSignUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\nexport const adminsignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.adminSignUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(`/account/${data.result._id}`);\r\n    window.scroll(0,0);\r\n    dispatch({ type: CLEAR_ERROR });\r\n\r\n  } catch (error) {\r\n    await api.createError(error.response.data);\r\n\r\n    dispatch({ type: ADD_ERROR, payload: error.response.data.message})  \r\n  }\r\n};\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"utilities/Forms\";\r\nimport { signin } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adminsignin } from \"actions/auth\";\r\n\r\nconst initialState = { email: \"\", password: \"\" }\r\n\r\nexport default function Login() {\r\n\r\n  const [accountData, setAccountData] = useState(initialState);\r\n  const [validate, setValidate] = useState({});\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [admin, setAdmin] = useState(false);\r\n  const error = useSelector(state => state.errors);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  \r\n  const validateForm = () => {\r\n      let isValid = true;\r\n\r\n      let validator = Form.validator({\r\n          email: {\r\n              value: accountData.email,\r\n              isRequired: true,\r\n              isEmail: true,\r\n          },\r\n          password: {\r\n              value: accountData.password,\r\n              isRequired: true,\r\n              minLength: 6,\r\n          }\r\n      });\r\n\r\n      if (validator !== null) {\r\n          setValidate({\r\n          validate: validator.errors,\r\n          });\r\n\r\n          isValid = false;\r\n      }\r\n      return isValid;\r\n  };\r\n\r\n  const login = (e) => {\r\n      e.preventDefault();\r\n      const validate = validateForm();\r\n\r\n      if (validate) {\r\n          setValidate({});\r\n          setAccountData({...accountData, email: \"\"});\r\n          setAccountData({...accountData, password: \"\"});\r\n\r\n          if (admin) {\r\n            dispatch(adminsignin(accountData, history));\r\n          } else {\r\n            dispatch(signin(accountData, history));\r\n          }\r\n      }\r\n  };\r\n\r\n  const toggleAdmin = () => {\r\n    if (admin) {\r\n      setAdmin(false);\r\n    } else {\r\n      setAdmin(true);\r\n    }\r\n  }\r\n\r\n  const togglePassword = (e) => {\r\n      if (showPassword) {\r\n          setShowPassword(false);\r\n      } else {\r\n          setShowPassword(true);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto px-4 h-full\">\r\n        <div className=\"flex content-center items-center justify-center h-full\">\r\n          <div className=\"w-full lg:w-4/12 px-4\">\r\n            <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\">\r\n            <div className=\"rounded-t mb-0 px-6 py-6\">\r\n                <div className=\"text-center mb-3\">\r\n                  <h6 className=\"text-blue text-xl font-bold\" style={{color:'#0EA5E9'}}>\r\n                    Sign in\r\n                  </h6><br/>\r\n                  <h6 className=\"text-success text-sm font-bold\">\r\n                    Welcome Back!\r\n                  </h6>\r\n                  <div className=\"text-center mt-6\">\r\n                    {admin ?\r\n                    <button\r\n                    className=\"btn-info text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                    type=\"button\"\r\n                    onClick={toggleAdmin}\r\n                  >\r\n                    Not Admin ?<br/>\r\n                    Click here to sign in.\r\n                  </button>:\r\n                  <button\r\n                  className=\"btn-danger text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                  type=\"button\"\r\n                  onClick={toggleAdmin}\r\n                >\r\n                  Admin ?<br/>\r\n                  Click here to sign in.\r\n                </button>\r\n                    }\r\n                  </div>\r\n                  {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\"\"}\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n                <div className=\"text-blueGray-400 text-center mb-3 font-bold\">\r\n                </div>\r\n                <form >\r\n                  <div className=\"relative w-full mb-3\">\r\n                      <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                      >\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                      type=\"email\"\r\n                      className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.email\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                      }`}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={accountData.email}\r\n                      placeholder=\"Email\"\r\n                      onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                      className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.email\r\n                          ? \"d-block\"\r\n                          : \"d-none\"\r\n                      }`}\r\n                    >\r\n                      {validate.validate && validate.validate.email\r\n                        ? validate.validate.email[0]\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"relative w-full mb-3\">\r\n                    <label\r\n                      className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                      htmlFor=\"grid-password\"\r\n                    >\r\n                      Password\r\n                    </label>\r\n                    <div>\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                          />\r\n                        <br/>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm \"\r\n                            onClick={(e) => togglePassword(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.password\r\n                            ? validate.validate.password[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"inline-flex items-center cursor-pointer\">\r\n                      <input\r\n                        id=\"customCheckLogin\"\r\n                        type=\"checkbox\"\r\n                        className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                        Remember me\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"text-center mt-6\">\r\n                    <button\r\n                      className=\"bg-success text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                      type=\"button\"\r\n                      onClick={login}\r\n                    >\r\n                      Sign In\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap mt-6 relative\">\r\n              <div className=\"w-1/2\">\r\n                <a\r\n                  href=\"#pablo\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                  className=\"text-blueGray-200\"\r\n                >\r\n                  <small>Forgot password?</small>\r\n                </a>\r\n              </div>\r\n              <div className=\"w-1/2 text-right\">\r\n                <Link to=\"/auth/signup\" className=\"text-blueGray-200\">\r\n                  <small>Create new account</small>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from \"utilities/Forms\";\r\nimport { othersignup } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialState = {\r\n    active: false, role: \"other\", userName: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", password: \"\", passwordConfirm: \"\", agreeBtn: \"\"\r\n};\r\n\r\nconst Other = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n    const [passwordMatch, setPasswordMatch] = useState(true);\r\n\r\n    const error = useSelector(state => state.errors);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            userName: {\r\n                value: accountData.userName,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            password: {\r\n                value: accountData.password,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            passwordConfirm: {\r\n                value: accountData.passwordConfirm,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n        if ( accountData.passwordConfirm !== accountData.password ) {\r\n            setPasswordMatch(false);\r\n            setValidate(false);\r\n        } else {\r\n            setPasswordMatch(true);\r\n            setValidate(true);\r\n        }\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, userName: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, password: \"\"});\r\n            setAccountData({...accountData, passwordConfirm: \"\"});\r\n\r\n            dispatch(othersignup(accountData, history));\r\n        }\r\n    };\r\n\r\n    const togglePassword = (e) => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        } else {\r\n            setShowPassword(true);\r\n        }\r\n    };\r\n\r\n    const togglePasswordConfirm = (e) => {\r\n        if (showPasswordConfirm) {\r\n            setShowPasswordConfirm(false);\r\n        } else {\r\n            setShowPasswordConfirm(true);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"userForm\">\r\n            <div className=\"relative w-full mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    User Name <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.firstName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.userName}\r\n                        placeholder=\"User Name\"\r\n                        onChange={(e) => setAccountData({...accountData, userName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.userName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.userName\r\n                        ? validate.validate.userName[0]\r\n                        : \"\"}\r\n                    </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        First Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.firstName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.firstName}\r\n                        placeholder=\"First Name\"\r\n                        onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Last Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.lastName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.lastName}\r\n                        placeholder=\"Last Name\"\r\n                        onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                    \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Email <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Phone Number <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.phoneNumber\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.phoneNumber\r\n                        ? validate.validate.phoneNumber[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePassword(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.password\r\n                            ? validate.validate.password[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Confirm Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.passwordConfirm}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, passwordConfirm: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePasswordConfirm(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPasswordConfirm ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.passwordConfirm\r\n                            ? validate.validate.passwordConfirm[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n                <input\r\n                id=\"customCheckLogin\"\r\n                type=\"checkbox\"\r\n                value={accountData.agreeBtn}\r\n                onChange={(e) => setAccountData({...accountData, agreeBtn: e.target.checked})}\r\n                className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\r\n                />\r\n                <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                I agree with the{\" \"}\r\n                <a\r\n                    href=\"/rules\"\r\n                    className=\"text-lightBlue-500\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                >\r\n                    Privacy Policy\r\n                </a>\r\n                </span>\r\n            </label>\r\n            {!accountData.agreeBtn ?\r\n                <div className='alert alert-warning font-bold'>\r\n                <i className=\"fas fa-exclamation-triangle\"></i> YOU MUST AGREE WITH THE PRIVACY POLICY TO COMPLETE REGISTRATION!\r\n            </div>: \"\"}\r\n        </div>\r\n        {!passwordMatch ?\r\n        <div className='alert alert-danger'>\r\n            <i className=\"fas fa-exclamation-triangle\"></i> Password is not matching the confirmation!\r\n        </div>: \"\"}\r\n        {error.length > 0?\r\n              <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                  <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n              </div>:\"\"}\r\n        <div className=\"text-center mt-6\">\r\n            <button\r\n                className=\"bg-success text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={register}\r\n            >\r\n                Create Account\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Other;","import React, { useState } from 'react';\r\nimport states from 'json/states';\r\nimport Form from \"utilities/Forms\";\r\nimport { directorsignup } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialState = {\r\n    active: false, role: \"director\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", companyName: \"\", taxId: \"\",\r\n    street: \"\", city: \"\", state: \"\", zipcode: \"\", checkingName: \"\", checkingNum: \"\", confirmCheckingNum: \"\",\r\n    routingNum: \"\", confirmRoutingNum: \"\",fieldComplexName: \"\", numOfFields: \"\", fieldComplexCity: \"\", fieldComplexState: \"\", password: \"\", passwordConfirm: \"\", agreeBtn: \"\"\r\n};\r\n\r\nconst Director = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n    const [passwordMatch, setPasswordMatch] = useState(true);\r\n    const [checkingNumMatch, setCheckingNumMatch] = useState(true);\r\n    const [routingNumMatch, setRoutingNumMatch] = useState(true);\r\n\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            companyName: {\r\n                value: accountData.companyName,\r\n                isRequired: true,\r\n            },\r\n            taxId: {\r\n                value: accountData.taxId,\r\n                isRequired: true,\r\n            },\r\n            street: {\r\n                value: accountData.street,\r\n                isRequired: true,\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n                maxLength: 2\r\n            },\r\n            zipcode: {\r\n                value: accountData.zipcode,\r\n                isRequired: true,\r\n            },\r\n            checkingName: {\r\n                value: accountData.checkingName,\r\n                isRequired: true,\r\n            },\r\n            checkingNum: {\r\n                value: accountData.checkingNum,\r\n                isRequired: true,\r\n            },\r\n            confirmCheckingNum: {\r\n                value: accountData.confirmCheckingNum,\r\n                isRequired: true,\r\n            },\r\n            routingNum: {\r\n                value: accountData.routingNum,\r\n                isRequired: true,\r\n            },\r\n            confirmRoutingNum: {\r\n                value: accountData.confirmRoutingNum,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexName: {\r\n                value: accountData.fieldComplexName,\r\n                isRequired: true,\r\n            },\r\n            numOfFields: {\r\n                value: accountData.numOfFields,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexCity: {\r\n                value: accountData.fieldComplexCity,\r\n                isRequired: true,\r\n            },\r\n            fieldComplexState: {\r\n                value: accountData.fieldComplexState,\r\n                isRequired: true,\r\n            },\r\n            password: {\r\n                value: accountData.password,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            passwordConfirm: {\r\n                value: accountData.passwordConfirm,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n        if ( accountData.passwordConfirm !== accountData.password ) {\r\n            setPasswordMatch(false);\r\n            setValidate(false);\r\n        } else {\r\n            setPasswordMatch(true);\r\n            setValidate(true);\r\n        }\r\n\r\n        if ( accountData.confirmRoutingNum !== accountData.routingNum ) {\r\n            setRoutingNumMatch(false);\r\n        } else {\r\n            setRoutingNumMatch(true);\r\n        }\r\n\r\n        if ( accountData.confirmCheckingNum !== accountData.checkingNum ) {\r\n            setCheckingNumMatch(false);\r\n        } else {\r\n            setCheckingNumMatch(true);\r\n        }\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(accountData);\r\n        \r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, companyName: \"\"});\r\n            setAccountData({...accountData, taxId: \"\"});\r\n            setAccountData({...accountData, street: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, zipcode: \"\"});\r\n            setAccountData({...accountData, checkingName: \"\"});\r\n            setAccountData({...accountData, checkingNum: \"\"});\r\n            if (accountData.confirmCheckingNum === accountData.checkingNum ) {\r\n                setAccountData({...accountData, confirmCheckingNum: \"\"})\r\n            };\r\n            setAccountData({...accountData, routingNum: \"\"});\r\n            setAccountData({...accountData, confirmCheckingNum: \"\"});\r\n            setAccountData({...accountData, fieldComplexName: \"\"});\r\n            setAccountData({...accountData, numOfFields: \"\"});\r\n            setAccountData({...accountData, fieldComplexCity: \"\"});\r\n            setAccountData({...accountData, fieldComplexState: \"\"});\r\n            setAccountData({...accountData, password: \"\"});\r\n            setAccountData({...accountData, passwordConfirm: \"\"});\r\n\r\n            dispatch(directorsignup(accountData, history));\r\n        }\r\n    };\r\n\r\n    const togglePassword = (e) => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        } else {\r\n            setShowPassword(true);\r\n        }\r\n    };\r\n\r\n    const togglePasswordConfirm = (e) => {\r\n        if (showPasswordConfirm) {\r\n            setShowPasswordConfirm(false);\r\n        } else {\r\n            setShowPasswordConfirm(true);\r\n        }\r\n    }\r\n    \r\n    // useEffect(() => {\r\n    //     setError(localStorage.getItem('error'));\r\n    \r\n    // }, [])\r\n    return(\r\n        <div className=\"directorForm\">\r\n        \r\n        <div className='row'>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    First Name <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.firstName}\r\n                    placeholder=\"First Name\"\r\n                    onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.firstName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.firstName\r\n                    ? validate.validate.firstName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Last name <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.lastName}\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.lastName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.lastName\r\n                    ? validate.validate.lastName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className='row'>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Director Email <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Director Phone Number <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.phoneNumber\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.phoneNumber\r\n                      ? validate.validate.phoneNumber[0]\r\n                      : \"\"}\r\n                  </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className='row'>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Company Name <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.companyName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.companyName}\r\n                    placeholder=\"Company Name\"\r\n                    onChange={(e) => setAccountData({...accountData, companyName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.companyName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.companyName\r\n                    ? validate.validate.companyName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Tax ID <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.taxId\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.taxId}\r\n                    placeholder=\"Tax ID\"\r\n                    onChange={(e) => setAccountData({...accountData, taxId: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.taxId\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.taxId\r\n                    ? validate.validate.taxId[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <hr/><br/>\r\n        <span className=\"uppercase text-info font-bold\">address: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n        <div className='row'>\r\n            <div className=\"relative col-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Street <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.street\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.street}\r\n                    placeholder=\"123 E Main ST\"\r\n                    onChange={(e) => setAccountData({...accountData, street: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.street\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.street\r\n                    ? validate.validate.street[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-4 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    City <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.city\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.city}\r\n                    placeholder=\"city\"\r\n                    onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.city\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.city\r\n                    ? validate.validate.city[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-4 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    State <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <select\r\n                    type=\"select\"\r\n                    value={accountData.state}\r\n                    onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.state\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                    <option defaultValue={true} value=\"\">-- State --</option>\r\n                    { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                </select>\r\n                <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.state\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.state\r\n                        ? validate.validate.state[0]\r\n                        : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-4 mb-3\">\r\n            <label\r\n                className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                htmlFor=\"grid-password\"\r\n            >\r\n                Zip Code <span style={{color:'red'}}>*</span>\r\n            </label>\r\n            <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.zipcode\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.zipcode}\r\n                    placeholder=\"Zipcode\"\r\n                    onChange={(e) => setAccountData({...accountData, zipcode: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.zipcode\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.zipcode\r\n                    ? validate.validate.zipcode[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <hr/><br/>\r\n\r\n        <span className=\"uppercase text-info font-bold\">The following is where we will deposit all of your team entry fees: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n        \r\n        <div className='row'>\r\n            <div className=\"relative col-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Name on checking account <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.checkingName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.checkingName}\r\n                    placeholder=\"name of checking account\"\r\n                    onChange={(e) => setAccountData({...accountData, checkingName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.checkingName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.checkingName\r\n                    ? validate.validate.checkingName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    DDA/checking account <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.checkingNum\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.checkingNum}\r\n                    placeholder=\"DDA/checking account\"\r\n                    onChange={(e) => setAccountData({...accountData, checkingNum: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.checkingNum\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.checkingNum\r\n                    ? validate.validate.checkingNum[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Confirm DDA/checking account <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.confirmCheckingNum\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.confirmCheckingNum}\r\n                    placeholder=\"Confirm DDA/checking account\"\r\n                    onChange={(e) => setAccountData({...accountData, confirmCheckingNum: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.confirmCheckingNum\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.confirmCheckingNum\r\n                    ? validate.validate.confirmCheckingNum[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    routing number <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.routingNum\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.routingNum}\r\n                    placeholder=\"routing number\"\r\n                    onChange={(e) => setAccountData({...accountData, routingNum: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.routingNum\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.routingNum\r\n                    ? validate.validate.routingNum[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    confirm routing number<span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.confirmRoutingNum\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.confirmRoutingNum}\r\n                    placeholder=\"confirm routing number\"\r\n                    onChange={(e) => setAccountData({...accountData, confirmRoutingNum: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.confirmRoutingNum\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.confirmRoutingNum\r\n                    ? validate.validate.confirmRoutingNum[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>  \r\n        </div>\r\n        \r\n        <hr/><br/>\r\n\r\n        <span className=\"uppercase text-info font-bold\">Please complete the following info for each field/complex where you throw tournaments: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n        <div className=\"relative w-full mb-3\">\r\n          <label\r\n            className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n            htmlFor=\"grid-password\"\r\n          >\r\n            name of field complex <span style={{color:'red'}}>*</span>\r\n          </label>\r\n          <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.fieldComplexName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.fieldComplexName}\r\n                    placeholder=\"name of field complex\"\r\n                    onChange={(e) => setAccountData({...accountData, fieldComplexName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.fieldComplexName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.fieldComplexName\r\n                    ? validate.validate.fieldComplexName[0]\r\n                    : \"\"}\r\n                </div>\r\n        </div>  \r\n        <div className=\"relative w-full mb-3\">\r\n          <label\r\n            className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n            htmlFor=\"grid-password\"\r\n          >\r\n            number of fields <span style={{color:'red'}}>*</span>\r\n          </label>\r\n          <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.numOfFields\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.numOfFields}\r\n                    placeholder=\"number of fields\"\r\n                    onChange={(e) => setAccountData({...accountData, numOfFields: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.numOfFields\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.numOfFields\r\n                    ? validate.validate.numOfFields[0]\r\n                    : \"\"}\r\n                </div>\r\n        </div>\r\n\r\n        <hr/><br/>\r\n\r\n        <span className=\"uppercase text-info font-bold\">City and state where fields/complex are located: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n        <div className='row'>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    City <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.fieldComplexCity\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.fieldComplexCity}\r\n                    placeholder=\"City\"\r\n                    onChange={(e) => setAccountData({...accountData, fieldComplexCity: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.fieldComplexCity\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.fieldComplexCity\r\n                    ? validate.validate.fieldComplexCity[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>  \r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    State <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <select\r\n                    type=\"select\"\r\n                    value={accountData.fieldComplexState}\r\n                    onChange={(e) => setAccountData({...accountData, fieldComplexState: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.fieldComplexState\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                    }`}\r\n                    placeholder=\"State\"\r\n                    >\r\n                    <option defaultValue={true} value=\"\">-- State --</option>\r\n                    { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                </select>\r\n                <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.fieldComplexState\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.fieldComplexState\r\n                        ? validate.validate.fieldComplexState[0]\r\n                        : \"\"}\r\n                </div>\r\n            </div>\r\n        </div><hr/><br/>\r\n\r\n        <span className=\"uppercase text-info font-bold\">set your password: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n\r\n        <div className='row'>\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Password <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.password\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={accountData.password}\r\n                        placeholder=\"Password\"\r\n                        onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                        onClick={(e) => togglePassword(e)}\r\n                    >\r\n                        <i\r\n                        className={\r\n                            showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                        }\r\n                        ></i>{\" \"}\r\n                    </button>\r\n\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.password\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                    >\r\n                        {validate.validate && validate.validate.password\r\n                        ? validate.validate.password[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Confirm Password <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.passwordConfirm\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={accountData.passwordConfirm}\r\n                        placeholder=\"Password\"\r\n                        onChange={(e) => setAccountData({...accountData, passwordConfirm: e.target.value})}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                        onClick={(e) => togglePasswordConfirm(e)}\r\n                    >\r\n                        <i\r\n                        className={\r\n                            showPasswordConfirm ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                        }\r\n                        ></i>{\" \"}\r\n                    </button>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.passwordConfirm\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                    >\r\n                        {validate.validate && validate.validate.passwordConfirm\r\n                        ? validate.validate.passwordConfirm[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n                <input\r\n                id=\"customCheckLogin\"\r\n                type=\"checkbox\"\r\n                value={accountData.agreeBtn}\r\n                onChange={(e) => setAccountData({...accountData, agreeBtn: e.target.checked})}\r\n                className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\r\n                />\r\n                <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                I agree with the{\" \"}\r\n                <a\r\n                    href=\"/rules\"\r\n                    className=\"text-lightBlue-500\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                >\r\n                    Privacy Policy\r\n                </a>\r\n                </span>\r\n            </label>\r\n            {!accountData.agreeBtn ?\r\n                <div className='alert alert-warning font-bold'>\r\n                <i className=\"fas fa-exclamation-triangle\"></i> YOU MUST AGREE WITH THE PRIVACY POLICY TO COMPLETE REGISTRATION!\r\n            </div>: \"\"}\r\n        </div>\r\n\r\n        {!passwordMatch ?\r\n        <div className='alert alert-danger'>\r\n            <i className=\"fas fa-exclamation-triangle\"></i> Password is not matching the confirmation!\r\n        </div>: \"\"}\r\n\r\n        {!checkingNumMatch ? \r\n        <div className='alert alert-danger'>\r\n            <i className=\"fas fa-exclamation-triangle\"></i> Checking Account Number is not matching it's confirmation!\r\n        </div>:\"\"}\r\n\r\n        {!routingNumMatch ? \r\n        <div className='alert alert-danger'>\r\n           <i className=\"fas fa-exclamation-triangle\"></i> Routing Number is not matching the confirmation!\r\n        </div>:\"\"}\r\n        {error.length > 0?\r\n        <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n            <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n        </div>:\"\"}\r\n        <div className=\"text-center mt-6\">\r\n            <button\r\n                className=\"bg-success text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={register}\r\n            >\r\n                Create Account\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Director;","import React, { useState } from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport states from 'json/states';\r\nimport Form from \"utilities/Forms\";\r\nimport { playersignup } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialState = {\r\n    active: false, role: \"player\", profileImage: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", highSchoolName: \"\",\r\n    street: \"\", city: \"\", state: \"\", zipcode: \"\", dob: new Date(), gradYear: \"\", collegeCommitment: \"\",\r\n    height: \"\", weight: \"\",pThrow: \"\", bat: \"\", primPosition: \"\", seconPosition: \"\", parentFirst: \"\", parentLast: \"\", \r\n    parentEmail: \"\", parentPhone: \"\", password: \"\", passwordConfirm: \"\", agreeBtn: false\r\n};\r\n\r\nconst Player = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n    const [passwordMatch, setPasswordMatch] = useState(true);\r\n\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            profileImage: {\r\n                value: accountData.profileImage,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            highSchoolName: {\r\n                value: accountData.highSchoolName,\r\n                isRequired: false,\r\n            },\r\n            street: {\r\n                value: accountData.street,\r\n                isRequired: true,\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n            },\r\n            zipcode: {\r\n                value: accountData.zipcode,\r\n                isRequired: true,\r\n            },\r\n            dob: {\r\n                value: accountData.dob,\r\n                isRequired: true,\r\n            },\r\n            gradYear: {\r\n                value: accountData.gradYear,\r\n                isRequired: true,\r\n            },\r\n            collegeCommitment: {\r\n                value: accountData.collegeCommitment,\r\n                isRequired: false,\r\n            },\r\n            height: {\r\n                value: accountData.height,\r\n                isRequired: true,\r\n            },\r\n            weight: {\r\n                value: accountData.weight,\r\n                isRequired: true,\r\n            },\r\n            pThrow: {\r\n                value: accountData.pThrow,\r\n                isRequired: true,\r\n            },\r\n            bat: {\r\n                value: accountData.bat,\r\n                isRequired: true,\r\n            },\r\n            primPosition: {\r\n                value: accountData.primPosition,\r\n                isRequired: true,\r\n            },\r\n            seconPosition: {\r\n                value: accountData.seconPosition,\r\n                isRequired: true,\r\n            },\r\n            parentFirst: {\r\n                value: accountData.parentFirst,\r\n                isRequired: true,\r\n            },\r\n            parentLast: {\r\n                value: accountData.parentLast,\r\n                isRequired: true,\r\n            },\r\n            parentEmail: {\r\n                value: accountData.parentEmail,\r\n                isRequired: true,\r\n            },\r\n            parentPhone: {\r\n                value: accountData.parentPhone,\r\n                isRequired: true,\r\n            },\r\n            password: {\r\n                value: accountData.password,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            passwordConfirm: {\r\n                value: accountData.passwordConfirm,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            agreeBtn: {\r\n                value: accountData.agreeBtn,\r\n                isRequired: true,\r\n            },\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n        if ( accountData.passwordConfirm !== accountData.password ) {\r\n            setPasswordMatch(false);\r\n            setValidate(false);\r\n        } else {\r\n            setPasswordMatch(true);\r\n            setValidate(true);\r\n        }\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        \r\n        console.log(accountData);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, profileImage: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, highSchoolName: \"\"});\r\n            setAccountData({...accountData, street: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, zipcode: \"\"});\r\n            setAccountData({...accountData, dob: \"\"});\r\n            setAccountData({...accountData, gradYear: \"\"});\r\n            setAccountData({...accountData, collegeCommitment: \"\"});\r\n            setAccountData({...accountData, height: \"\"});\r\n            setAccountData({...accountData, weight: \"\"});\r\n            setAccountData({...accountData, pThrow: \"\"});\r\n            setAccountData({...accountData, bat: \"\"});\r\n            setAccountData({...accountData, primPosition: \"\"});\r\n            setAccountData({...accountData, parentFirst: \"\"});\r\n            setAccountData({...accountData, parentLast: \"\"});\r\n            setAccountData({...accountData, parentEmail: \"\"});\r\n            setAccountData({...accountData, parentPhone: \"\"});\r\n            setAccountData({...accountData, password: \"\"});\r\n            setAccountData({...accountData, passwordConfirm: \"\"});\r\n            setAccountData({...accountData, agreeBtn: \"\"});\r\n            \r\n            dispatch(playersignup(accountData, history));\r\n            \r\n        }\r\n    };\r\n\r\n    const togglePassword = (e) => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        } else {\r\n            setShowPassword(true);\r\n        }\r\n    };\r\n\r\n    const togglePasswordConfirm = (e) => {\r\n        if (showPasswordConfirm) {\r\n            setShowPasswordConfirm(false);\r\n        } else {\r\n            setShowPasswordConfirm(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"playerForm\">\r\n            <div className=\"relative w-full mb-3\">\r\n                <label\r\n                className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                htmlFor=\"grid-password\"\r\n                >\r\n                Player Profile <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <FileBase\r\n                    type=\"file\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.profileImage\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.profileImage}\r\n                    onDone={({base64}) => setAccountData({...accountData, profileImage: base64})}\r\n                    multiple={false}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                />\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.profileImage\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.profileImage\r\n                    ? validate.validate.profileImage[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n                    \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        First Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.firstName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.firstName}\r\n                        placeholder=\"First Name\"\r\n                        onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Last Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.lastName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.lastName}\r\n                        placeholder=\"Last Name\"\r\n                        onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                    \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Email <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Phone Number <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.phoneNumber\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.phoneNumber\r\n                        ? validate.validate.phoneNumber[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full mb-3\">\r\n                <label\r\n                className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                htmlFor=\"grid-password\"\r\n                >\r\n                High School Name <span style={{color:'red'}}>(If Applicable)</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.highSchoolName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.highSchoolName}\r\n                    placeholder=\"High School Name\"\r\n                    onChange={(e) => setAccountData({...accountData, highSchoolName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.highSchoolName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.highSchoolName\r\n                    ? validate.validate.highSchoolName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <hr/><br/>\r\n            <span className=\"uppercase text-info font-bold\">address: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n\r\n            <div className='row'>\r\n            <div className=\"relative col-12 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Street <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.street\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.street}\r\n                    placeholder=\"123 E Main ST\"\r\n                    onChange={(e) => setAccountData({...accountData, street: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.street\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.street\r\n                    ? validate.validate.street[0]\r\n                    : \"\"}\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-4 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        City <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.city\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.city}\r\n                        placeholder=\"city\"\r\n                        onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.city\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.city\r\n                        ? validate.validate.city[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-4 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        State <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        value={accountData.state}\r\n                        onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                        className={`form-control ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        >\r\n                        <option defaultValue={true} value=\"\">-- State --</option>\r\n                        { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.state\r\n                            ? validate.validate.state[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-4 mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Zip Code <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.zipcode\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.zipcode}\r\n                        placeholder=\"Zipcode\"\r\n                        onChange={(e) => setAccountData({...accountData, zipcode: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.zipcode\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.zipcode\r\n                        ? validate.validate.zipcode[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/><br/>\r\n            <div className=\"w-full mb-3\">\r\n                <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                >\r\n                    Date of Birth <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"date\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.dob\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.dob.slice(0, 10)}\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(e) => setAccountData({...accountData, dob: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.dob\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.dob\r\n                    ? validate.validate.dob[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Graduation Year <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.gradYear\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.gradYear}\r\n                        placeholder=\"graduation year\"\r\n                        onChange={(e) => setAccountData({...accountData, gradYear: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.gradYear\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.gradYear\r\n                        ? validate.validate.gradYear[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    College Commitment\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.collegeCommitment\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.collegeCommitment}\r\n                        placeholder=\"College Commitment\"\r\n                        onChange={(e) => setAccountData({...accountData, collegeCommitment: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.collegeCommitment\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.collegeCommitment\r\n                        ? validate.validate.collegeCommitment[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    player height <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.height\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.height}\r\n                        placeholder=\"ft, in\"\r\n                        onChange={(e) => setAccountData({...accountData, height: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.height\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.height\r\n                        ? validate.validate.height[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>  \r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    player weight <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.weight\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.weight}\r\n                        placeholder=\"lb\"\r\n                        onChange={(e) => setAccountData({...accountData, weight: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.weight\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.weight\r\n                        ? validate.validate.weight[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            <hr/><br/>\r\n            \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Throw <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    onChange={(e) => setAccountData({...accountData, pThrow: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.pThrow\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                    }`}                 \r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option defaultValue={true} value=\"\">Select..</option>\r\n                    <option value=\"left\">left</option>\r\n                    <option value=\"right\">right</option>\r\n                    <option value=\"both\">both</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.pThrow\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.pThrow\r\n                            ? validate.validate.pThrow[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>  \r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    bat <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    onChange={(e) => setAccountData({...accountData, bat: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.bat\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                    }`}\r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option defaultValue={true} value=\"\">Select..</option>\r\n                    <option value=\"left\">left</option>\r\n                    <option value=\"right\">right</option>\r\n                    <option value=\"both\">both</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.bat\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.bat\r\n                            ? validate.validate.bat[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    primary position <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    onChange={(e) => setAccountData({...accountData, primPosition: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.primPosition\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                    }`}\r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option defaultValue={true} value=\"\">Select..</option>\r\n                    <option value=\"c\">C</option>\r\n                    <option value=\"1b\">1b</option>\r\n                    <option value=\"2nd\">2nd</option>\r\n                    <option value=\"ss\">ss</option>\r\n                    <option value=\"3b\">3b</option>\r\n                    <option value=\"of\">of</option>\r\n                    <option value=\"rhp\">rhp</option>\r\n                    <option value=\"lhp\">lhp</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.primPosition\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.primPosition\r\n                            ? validate.validate.primPosition[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    secondary position <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                    type=\"select\"\r\n                    onChange={(e) => setAccountData({...accountData, seconPosition: e.target.value})}\r\n                    className={`form-control ${\r\n                        validate.validate && validate.validate.seconPosition\r\n                          ? \"is-invalid \"\r\n                          : \"\"\r\n                    }`}\r\n                    placeholder=\"Name\"\r\n                    >\r\n                    <option defaultValue={true} value=\"\">Select..</option>\r\n                    <option value=\"c\">C</option>\r\n                    <option value=\"1b\">1b</option>\r\n                    <option value=\"2nd\">2nd</option>\r\n                    <option value=\"ss\">ss</option>\r\n                    <option value=\"3b\">3b</option>\r\n                    <option value=\"of\">of</option>\r\n                    <option value=\"rhp\">rhp</option>\r\n                    <option value=\"lhp\">lhp</option>\r\n                    </select>\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.seconPosition\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.seconPosition\r\n                        ? validate.validate.seconPosition[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n\r\n            <hr/><br/>\r\n\r\n            <span className=\"uppercase text-info font-bold\">parent info: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Parent First Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.parentFirst\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.parentFirst}\r\n                        placeholder=\"First Name\"\r\n                        onChange={(e) => setAccountData({...accountData, parentFirst: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.parentFirst\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.parentFirst\r\n                        ? validate.validate.parentFirst[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Parent Last Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.parentFirst\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.parentLast}\r\n                        placeholder=\"last Name\"\r\n                        onChange={(e) => setAccountData({...accountData, parentLast: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.parentLast\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.parentLast\r\n                        ? validate.validate.parentLast[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                    \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Parent Email <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.parentEmail\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.parentEmail}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, parentEmail: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.parentEmail\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.parentEmail\r\n                      ? validate.validate.parentEmail[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Parent Phone Number <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.parentPhone\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.parentPhone}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, parentPhone: e.target.value})}\r\n                  />\r\n\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.parentPhone\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.parentPhone\r\n                        ? validate.validate.parentPhone[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div><hr/><br/>\r\n\r\n            <span className=\"uppercase text-info font-bold\">set your password: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePassword(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.password\r\n                            ? validate.validate.password[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Confirm Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.passwordConfirm}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, passwordConfirm: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePasswordConfirm(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPasswordConfirm ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.passwordConfirm\r\n                            ? validate.validate.passwordConfirm[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n                <input\r\n                    id=\"customCheckLogin\"\r\n                    type=\"checkbox\"\r\n                    value={accountData.agreeBtn}\r\n                    onChange={(e) => setAccountData({...accountData, agreeBtn: e.target.checked})}\r\n                    className={`form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.agreeBtn\r\n                        ? \"is-invalid \"\r\n                        : \"\"}`}\r\n                />\r\n                <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                I agree with the{\" \"}\r\n                <a\r\n                    href=\"/rules\"\r\n                    className=\"text-lightBlue-500\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                >\r\n                    Privacy Policy\r\n                </a>\r\n                </span>\r\n            </label>\r\n            {!accountData.agreeBtn ?\r\n                <div className='alert alert-warning font-bold'>\r\n                <i className=\"fas fa-exclamation-triangle\"></i> YOU MUST AGREE WITH THE PRIVACY POLICY TO COMPLETE REGISTRATION!\r\n            </div>: \"\"}\r\n            <div\r\n                className={`invalid-feedback text-start ${\r\n                validate.validate && validate.validate.agreeBtn\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n            >\r\n                {validate.validate && validate.validate.agreeBtn\r\n                ? validate.validate.agreeBtn[0]\r\n                : \"\"}\r\n            </div>\r\n        </div>\r\n        {!passwordMatch ?\r\n        <div className='alert alert-danger'>\r\n           <i className=\"fas fa-exclamation-triangle\"></i> Password is not matching the confirmation!\r\n        </div>: \"\"}\r\n        {error.length > 0?\r\n        <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n            <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n        </div>:\"\"}\r\n        <div className=\"text-center mt-6\">\r\n            <button\r\n                className=\"bg-success text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={register}\r\n            >\r\n                Create Account\r\n            </button>\r\n        </div>\r\n    </div>        \r\n    )\r\n};\r\n\r\nexport default Player;","import React, { useState } from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport states from 'json/states';\r\nimport Form from \"utilities/Forms\";\r\nimport { teamsignup } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialState = {\r\n    active: false, role: \"team\", profileImage: \"\", teamName: \"\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", city: \"\", state: \"\", ageGroup: \"\", \r\n    division: \"\", password: \"\", passwordConfirm: \"\", agreeBtn: \"\"\r\n};\r\n\r\nconst Team = () => {\r\n\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n    const [passwordMatch, setPasswordMatch] = useState(true);\r\n\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            profileImage: {\r\n                value: accountData.profileImage,\r\n                isRequired: true,\r\n            },\r\n            teamName: {\r\n                value: accountData.teamName,\r\n                isRequired: true,\r\n            },\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            city: {\r\n                value: accountData.city,\r\n                isRequired: true,\r\n            },\r\n            state: {\r\n                value: accountData.state,\r\n                isRequired: true,\r\n            },\r\n            ageGroup: {\r\n                value: accountData.ageGroup,\r\n                isRequired: true,\r\n            },\r\n            division: {\r\n                value: accountData.division,\r\n                isRequired: true,\r\n            },\r\n            password: {\r\n                value: accountData.password,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            passwordConfirm: {\r\n                value: accountData.passwordConfirm,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n        if ( accountData.passwordConfirm !== accountData.password ) {\r\n            setPasswordMatch(false);\r\n            setValidate(false);\r\n        } else {\r\n            setPasswordMatch(true);\r\n            setValidate(true);\r\n        }\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, profileImage: \"\"});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, teamName: \"\"});\r\n            setAccountData({...accountData, city: \"\"});\r\n            setAccountData({...accountData, state: \"\"});\r\n            setAccountData({...accountData, ageGroup: \"\"});\r\n            setAccountData({...accountData, division: \"\"});\r\n            setAccountData({...accountData, password: \"\"});\r\n            setAccountData({...accountData, passwordConfirm: \"\"});\r\n\r\n            dispatch(teamsignup(accountData, history));\r\n        }\r\n    };\r\n\r\n    const togglePassword = (e) => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        } else {\r\n            setShowPassword(true);\r\n        }\r\n    };\r\n\r\n    const togglePasswordConfirm = (e) => {\r\n        if (showPasswordConfirm) {\r\n            setShowPasswordConfirm(false);\r\n        } else {\r\n            setShowPasswordConfirm(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"teamForm\">\r\n            <div className=\"relative w-full mb-3\">\r\n                <label\r\n                className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                htmlFor=\"grid-password\"\r\n                >\r\n                Team Name <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <input\r\n                type=\"text\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.teamName\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.companyName}\r\n                    placeholder=\"Team Name\"\r\n                    onChange={(e) => setAccountData({...accountData, teamName: e.target.value})}\r\n                />\r\n\r\n                <div\r\n                className={`invalid-feedback text-start ${\r\n                    validate.validate && validate.validate.teamName\r\n                    ? \"d-block\"\r\n                    : \"d-none\"\r\n                }`}\r\n                >\r\n                {validate.validate && validate.validate.teamName\r\n                    ? validate.validate.teamName[0]\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Head Coach First Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.firstName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.firstName}\r\n                        placeholder=\"First Name\"\r\n                        onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>   \r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Head Coach Last Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.lastName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.lastName}\r\n                        placeholder=\"Last Name\"\r\n                        onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Head Coach Email <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Head Coach Number <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.phoneNumber\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.phoneNumber\r\n                      ? validate.validate.phoneNumber[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-6 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        City <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.city\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.city}\r\n                        placeholder=\"City\"\r\n                        onChange={(e) => setAccountData({...accountData, city: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.city\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.city\r\n                        ? validate.validate.city[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-6 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        State <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        value={accountData.state}\r\n                        onChange={(e) => setAccountData({...accountData, state: e.target.value})}\r\n                        className={`form-control ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        >\r\n                        <option defaultValue={true} value=\"\">-- State --</option>\r\n                        { states.map((state) => <option key={state.abbreviation}>{state.name}</option> )}\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.state\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.state\r\n                            ? validate.validate.state[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full mb-3\">\r\n                <label\r\n                className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                htmlFor=\"grid-password\"\r\n                >\r\n                Team Profile <span style={{color:'red'}}>*</span>\r\n                </label>\r\n                <FileBase\r\n                    type=\"file\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                        validate.validate && validate.validate.profileImage\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    value={accountData.profileImage}\r\n                    onDone={({base64}) => setAccountData({...accountData, profileImage: base64})}\r\n                    multiple={false}\r\n                    className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                />\r\n                <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.profileImage\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.profileImage\r\n                        ? validate.validate.profileImage[0]\r\n                        : \"\"}\r\n                    </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Age group <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        onChange={(e) => setAccountData({...accountData, ageGroup: e.target.value})}\r\n                        className={`form-control ${\r\n                            validate.validate && validate.validate.ageGroup\r\n                              ? \"is-invalid \"\r\n                              : \"\"\r\n                        }`}\r\n                        placeholder=\"Name\"\r\n                        >\r\n                        <option defaultValue={true} value=\"\">Select age group..</option>\r\n                        <option value=\"5u\">5U</option>\r\n                        <option value=\"6u\">6U</option>\r\n                        <option value=\"7u\">7U</option>\r\n                        <option value=\"8u\">8U</option>\r\n                        <option value=\"9u\">9U</option>\r\n                        <option value=\"10u\">10U</option>\r\n                        <option value=\"11u\">11U</option>\r\n                        <option value=\"12u\">12U</option>\r\n                        <option value=\"13u\">13U</option>\r\n                        <option value=\"14u\">14U</option>\r\n                        <option value=\"15u\">15U</option>\r\n                        <option value=\"16u\">16U</option>\r\n                        <option value=\"175u\">17U</option>\r\n                        <option value=\"18u\">18U</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.ageGroup\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.ageGroup\r\n                            ? validate.validate.ageGroup[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                    className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                    htmlFor=\"grid-password\"\r\n                    >\r\n                    Division <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <select\r\n                        type=\"select\"\r\n                        onChange={(e) => setAccountData({...accountData, division: e.target.value})}\r\n                        className={`form-control ${\r\n                            validate.validate && validate.validate.division\r\n                              ? \"is-invalid \"\r\n                              : \"\"\r\n                        }`}        \r\n                        placeholder=\"Name\"\r\n                        >\r\n                        <option defaultValue={true}  value=\"\">Select division..</option>\r\n                        <option value=\"aa\">AA</option>\r\n                        <option value=\"aaa\">AAA</option>\r\n                        <option value=\"majors\">Majors</option>\r\n                        <option value=\"showcase\">Showcase</option>\r\n                        <option value=\"highSchool\">High School</option>\r\n                    </select>\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.division\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.division\r\n                            ? validate.validate.division[0]\r\n                            : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/><br/>\r\n\r\n            <span className=\"uppercase text-info font-bold\">set your password: <span style={{color:'red'}}>*</span></span><br/><br/>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePassword(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.password\r\n                            ? validate.validate.password[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Confirm Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.passwordConfirm}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, passwordConfirm: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePasswordConfirm(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPasswordConfirm ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.passwordConfirm\r\n                            ? validate.validate.passwordConfirm[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n                <input\r\n                id=\"customCheckLogin\"\r\n                type=\"checkbox\"\r\n                value={accountData.agreeBtn}\r\n                onChange={(e) => setAccountData({...accountData, agreeBtn: e.target.checked})}\r\n                className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\r\n                />\r\n                <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                I agree with the{\" \"}\r\n                <a\r\n                    href=\"/rules\"\r\n                    className=\"text-lightBlue-500\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                >\r\n                    Privacy Policy\r\n                </a>\r\n                </span>\r\n            </label>\r\n            {!accountData.agreeBtn ?\r\n                <div className='alert alert-warning font-bold'>\r\n                <i className=\"fas fa-exclamation-triangle\"></i> YOU MUST AGREE WITH THE PRIVACY POLICY TO COMPLETE REGISTRATION!\r\n            </div>: \"\"}\r\n        </div>\r\n        {!passwordMatch ?\r\n        <div className='alert alert-danger'>\r\n            <i className=\"fas fa-exclamation-triangle\"></i> Password is not matching the confirmation!\r\n        </div>: \"\"}\r\n        {error.length > 0?\r\n            <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n            </div>:\"\"}\r\n        <div className=\"text-center mt-6\">\r\n            <button\r\n                className=\"bg-success text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={register}\r\n            >\r\n                Create Account\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Team;","import React, { useState } from 'react';\r\nimport Form from \"utilities/Forms\";\r\nimport { adminsignup } from 'actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialState = {\r\n    role: \"admin\", firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", password: \"\", passwordConfirm: \"\", agreeBtn: \"\"\r\n};\r\n\r\nconst Admin = () => {\r\n    const [accountData, setAccountData] = useState(initialState);\r\n    const [validate, setValidate] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n    const [passwordMatch, setPasswordMatch] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const error = useSelector(state => state.errors);\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        let validator = Form.validator({\r\n            firstName: {\r\n                value: accountData.firstName,\r\n                isRequired: true,\r\n            },\r\n            lastName: {\r\n                value: accountData.lastName,\r\n                isRequired: true,\r\n            },\r\n            email: {\r\n                value: accountData.email,\r\n                isRequired: true,\r\n                isEmail: true,\r\n            },\r\n            phoneNumber: {\r\n                value: accountData.phoneNumber,\r\n                isRequired: true,\r\n                type: Number,\r\n                minLength: 10\r\n            },\r\n            password: {\r\n                value: accountData.password,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n            passwordConfirm: {\r\n                value: accountData.passwordConfirm,\r\n                isRequired: true,\r\n                minLength: 6,\r\n            },\r\n        });\r\n\r\n        // Make sure our MUSt match fields are matching \r\n\r\n        if ( accountData.passwordConfirm !== accountData.password ) {\r\n            setPasswordMatch(false);\r\n            setValidate(false);\r\n        } else {\r\n            setPasswordMatch(true);\r\n            setValidate(true);\r\n        }\r\n\r\n        if (validator !== null) {\r\n            setValidate({\r\n            validate: validator.errors,\r\n            });\r\n\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(accountData);\r\n\r\n        const validate = validateForm();\r\n\r\n        if (validate) {\r\n            setValidate({});\r\n            setAccountData({...accountData, firstName: \"\"});\r\n            setAccountData({...accountData, lastName: \"\"});\r\n            setAccountData({...accountData, email: \"\"});\r\n            setAccountData({...accountData, phoneNumber: \"\"});\r\n            setAccountData({...accountData, password: \"\"});\r\n            setAccountData({...accountData, passwordConfirm: \"\"});\r\n            dispatch(adminsignup(accountData, history));\r\n        }\r\n    };\r\n\r\n    const togglePassword = (e) => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        } else {\r\n            setShowPassword(true);\r\n        }\r\n    };\r\n\r\n    const togglePasswordConfirm = (e) => {\r\n        if (showPasswordConfirm) {\r\n            setShowPasswordConfirm(false);\r\n        } else {\r\n            setShowPasswordConfirm(true);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"userForm\">\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        First Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.firstName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.firstName}\r\n                        placeholder=\"First Name\"\r\n                        onChange={(e) => setAccountData({...accountData, firstName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.firstName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.firstName\r\n                        ? validate.validate.firstName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Last Name <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"text\"\r\n                        className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.lastName\r\n                            ? \"is-invalid \"\r\n                            : \"\"\r\n                        }`}\r\n                        value={accountData.lastName}\r\n                        placeholder=\"Last Name\"\r\n                        onChange={(e) => setAccountData({...accountData, lastName: e.target.value})}\r\n                    />\r\n\r\n                    <div\r\n                    className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.lastName\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                    >\r\n                    {validate.validate && validate.validate.lastName\r\n                        ? validate.validate.lastName[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                    \r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Email <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"email\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) =>setAccountData({...accountData, email: e.target.value})}\r\n                  />\r\n\r\n                  <div\r\n                    className={`invalid-feedback text-start ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"d-block\"\r\n                        : \"d-none\"\r\n                    }`}\r\n                  >\r\n                    {validate.validate && validate.validate.email\r\n                      ? validate.validate.email[0]\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Phone Number <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                      validate.validate && validate.validate.email\r\n                        ? \"is-invalid \"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={accountData.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) =>setAccountData({...accountData, phoneNumber: e.target.value})}\r\n                  />\r\n\r\n                    <div\r\n                        className={`invalid-feedback text-start ${\r\n                        validate.validate && validate.validate.phoneNumber\r\n                            ? \"d-block\"\r\n                            : \"d-none\"\r\n                        }`}\r\n                        >\r\n                        {validate.validate && validate.validate.phoneNumber\r\n                        ? validate.validate.phoneNumber[0]\r\n                        : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, password: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePassword(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPassword ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.password\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.password\r\n                            ? validate.validate.password[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"relative col-md-6 col-sm-6col-xs-12 mb-3\">\r\n                    <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"grid-password\"\r\n                    >\r\n                        Confirm Password <span style={{color:'red'}}>*</span>\r\n                    </label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                            className={`form-control border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150 ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"is-invalid \"\r\n                                : \"\"\r\n                            }`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={accountData.passwordConfirm}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setAccountData({...accountData, passwordConfirm: e.target.value})}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={(e) => togglePasswordConfirm(e)}\r\n                        >\r\n                            <i\r\n                            className={\r\n                                showPasswordConfirm ? \"far fa-eye\" : \"far fa-eye-slash\"\r\n                            }\r\n                            ></i>{\" \"}\r\n                        </button>\r\n                        <div\r\n                            className={`invalid-feedback text-start ${\r\n                            validate.validate && validate.validate.passwordConfirm\r\n                                ? \"d-block\"\r\n                                : \"d-none\"\r\n                            }`}\r\n                        >\r\n                            {validate.validate && validate.validate.passwordConfirm\r\n                            ? validate.validate.passwordConfirm[0]\r\n                            : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n                <input\r\n                id=\"customCheckLogin\"\r\n                type=\"checkbox\"\r\n                value={accountData.agreeBtn}\r\n                onChange={(e) => setAccountData({...accountData, agreeBtn: e.target.checked})}\r\n                className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\r\n                />\r\n                <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\r\n                I agree with the{\" \"}\r\n                <a\r\n                    href=\"/rules\"\r\n                    className=\"text-lightBlue-500\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                >\r\n                    Privacy Policy\r\n                </a>\r\n                </span>\r\n            </label>\r\n            {!accountData.agreeBtn ?\r\n                <div className='alert alert-warning font-bold'>\r\n                <i className=\"fas fa-exclamation-triangle\"></i> YOU MUST AGREE WITH THE PRIVACY POLICY TO COMPLETE REGISTRATION!\r\n            </div>: \"\"}\r\n        </div>\r\n        {!passwordMatch ?\r\n        <div className='alert alert-danger'>\r\n            <i className=\"fas fa-exclamation-triangle\"></i> Password is not matching the confirmation!\r\n        </div>: \"\"}\r\n        {error.length > 0?\r\n            <div className=\"alert mt-1 uppercase alert-danger\" role=\"alert\">\r\n                <h2><span className='text-danger font-bold'>ERROR</span>: {error[error.length - 1]}</h2>\r\n            </div>:\"\"\r\n        }\r\n        <div className=\"text-center mt-6\">\r\n            <button\r\n                className=\"bg-blueGray-800 text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={register}\r\n            >\r\n                Create Account\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Admin;","import React, { useState } from \"react\";\r\nimport Other from \"./rolesRegisterForms/Other\";\r\nimport Director from \"./rolesRegisterForms/Director\";\r\nimport Player from \"./rolesRegisterForms/Player\";\r\nimport Team from \"./rolesRegisterForms/Team\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Admin from \"./rolesRegisterForms/Admin\";\r\n\r\nexport default function Register() {\r\n\r\n  const [roleValue, setRoleValue] = useState(\"\");\r\n\r\n  const handleRoleChange = (e) => {\r\n    e.preventDefault();\r\n    setRoleValue(e.target.value);  \r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto px-4 h-full\">\r\n        <div className=\"flex content-center items-center justify-center h-full\">\r\n          <div className=\"w-full lg:w-6/12 px-4\">\r\n            <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\">\r\n              <div className=\"rounded-t mb-0 px-6 py-6\">\r\n                <div className=\"text-center mb-3\">\r\n                  <h1 className=\"text-blue text-xl font-bold\" style={{color:'#0EA5E9'}}>\r\n                    REGISTER\r\n                  </h1><br/>\r\n                  <h6 className=\"text-dark text-sm font-bold\">\r\n                    Please choose your role, and fill all the required information <br/>according to your role.\r\n                  </h6>\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n                <div className=\"text-blueGray-400 text-center mb-3 font-bold\">\r\n                </div>\r\n                <form>\r\n                  <div className=\"relative w-full mb-3\">\r\n                      <label\r\n                        className=\"uppercase text-info font-bold\"\r\n                        htmlFor=\"grid-password\"\r\n                      >\r\n                        Role <span style={{color:'red'}}>*</span>\r\n                      </label>\r\n                      <select\r\n                        type=\"select\"\r\n                        onChange={handleRoleChange}\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        placeholder=\"Name\"\r\n                      >\r\n                        <option defaultValue={true} value=\"\">-- CHOOSE YOUR ROLE --</option>\r\n                        <option value=\"director\">Tournament Director</option>\r\n                        <option value=\"team\">Team</option>\r\n                        <option value=\"player\">Player</option>\r\n                        <option value=\"other\">Other</option>\r\n                        <option value=\"\">---------</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                      </select>\r\n                    </div><hr/><br/>\r\n                    {/* Determine what the role is */}\r\n                    {roleValue === \"director\"?\r\n                      <Director />:\r\n                      roleValue === \"team\"?\r\n                    <Team />:\r\n                    roleValue === \"player\"?\r\n                      <Player />: roleValue === \"other\"?\r\n                      <Other />:roleValue === \"admin\" ?\r\n                      <Admin />: \"\"\r\n                    }\r\n                    <div className=\"text-center mt-6\">\r\n                        <Link\r\n                            to=\"/auth/login\"\r\n                            className=\"text-info hover:text-blueGray-800 font-semibold block pb-2 font-bold text-sm\"\r\n\r\n                        >\r\n                        Already have an account ? Click here to log in\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Redirect, useLocation, useHistory} from \"react-router-dom\";\r\nimport decode from 'jwt-decode';\r\n\r\n// components\r\nimport Navbar from \"components/Navbars/AuthNavbar.js\";\r\nimport FooterSmall from \"components/Footers/FooterSmall.js\";\r\n\r\n// views\r\n\r\nimport Login from \"views/auth/Login.js\";\r\nimport Register from \"views/auth/Register.js\";\r\n\r\nexport default function Auth() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const routing = (route) => {\r\n    history.push(route);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n    const decodedToken = decode(token);\r\n\r\n    if (decodedToken.exp * 1000 < new Date().getTime());\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n}, [location]);\r\n\r\n  return (\r\n    <>\r\n    {!user?\r\n    <>\r\n    <Navbar transparent />\r\n    <main>\r\n      <section className=\"relative w-full h-full py-40 min-h-screen\">\r\n        <div\r\n          className=\"absolute top-0 w-full h-full bg-blueGray-800 bg-no-repeat bg-full\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/signup_bg_2.png\").default + \")\",\r\n          }}\r\n        ></div>\r\n        <Switch>\r\n          <Route path=\"/auth/login\" exact component={Login} />\r\n          <Route path=\"/auth/signup\" exact component={Register} />\r\n          <Redirect from=\"/auth\" to=\"/auth/login\" />\r\n        </Switch>\r\n        <FooterSmall absolute />\r\n      </section>\r\n    </main></>:\r\n    routing(`/Account`)}\r\n      \r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bb2.fb31e216.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport Logo from \"assets/img/logo.png\";\r\nimport useStyles from './styles';\r\nimport EventsDropdown from \"components/Dropdowns/EventsDropdown.js\";\r\n\r\nimport UserDropdown from \"components/Dropdowns/UserDropdown.js\";\r\n\r\nimport * as actionType from '../../constants/actionTypes';\r\n\r\nconst Navbar = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n    \r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n  \r\n  const [navbarOpen, setNavbarOpen] = React.useState(false); \r\n    return (\r\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"\r\n            >\r\n              <img src={Logo} style={{height:'85px'}}/>\r\n            </Link>\r\n            <button\r\n              className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              <i className=\"fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={\r\n              \"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\" +\r\n              (navbarOpen ? \" block\" : \" hidden\")\r\n            }\r\n            id=\"example-navbar-warning\"\r\n          >\r\n            <ul className=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"/\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n              <EventsDropdown />\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n                  href=\"\"\r\n                >\r\n                  Live Events\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Players\r\n                </Link>\r\n              </li>\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/aboutus\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  About Us\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/rules\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                  Rules\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <Link\r\n                    to=\"/contactus\"\r\n                    className=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-4 lg:py-2 flex items-center text-sm uppercase font-bold\"\r\n\r\n                  >\r\n                    Contact Us\r\n                  </Link>\r\n              </li>\r\n                {user ? (\r\n                  \r\n                  <div className=\"flex items-center\">\r\n                    <UserDropdown />\r\n                  </div>\r\n                ):(\r\n                  <div className=\"row\">\r\n                    <li className=\"flex items-center\">\r\n                    <Link\r\n                      to=\"/auth/login\"\r\n                      className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                    >\r\n                      <i className=\"fas fa-sign-in-alt fa-fw\"></i>&nbsp;\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"flex items-center\">\r\n                    <Link\r\n                      to=\"/auth/signup\"\r\n                      className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3 ease-linear transition-all duration-150\"\r\n\r\n                    >\r\n                      <i className=\"fa fa-user-plus fa-fw\"></i>&nbsp;\r\n                      Register\r\n                    </Link>\r\n                  </li>\r\n                  </div>\r\n                )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","/*eslint-disable*/\r\nimport React from 'react';\r\n\r\nimport Navbar from \"../Navbars/navbar\"\r\n\r\nexport default function IndexNavbar() {\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"top-0 fixed z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-white shadow\">\r\n        <Navbar />\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"bg-blueGray-200 pt-8 pb-6\" >\r\n        <div\r\n          className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\r\n          style={{ transform: \"translateZ(0)\" }}\r\n        >\r\n          <svg\r\n            className=\"absolute bottom-0 overflow-hidden\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            preserveAspectRatio=\"none\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 2560 100\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n          >\r\n            <polygon\r\n              className=\"text-blueGray-200 fill-current\"\r\n              points=\"2560 0 2560 100 0 100\"\r\n            ></polygon>\r\n          </svg>\r\n        </div>\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"flex flex-wrap text-center lg:text-left\">\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <h4 className=\"text-3xl font-semibold\">Let's keep in touch!</h4>\r\n              <h5 className=\"text-lg mt-0 mb-2 text-blueGray-600\">\r\n                Find us on any of these platforms, we respond 1-2 business days.\r\n              </h5>\r\n              <div className=\"mt-6 lg:mb-0 mb-6\">\r\n                <button\r\n                  className=\"bg-white text-lightBlue-400 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"bg-white text-lightBlue-600 shadow-lg font-normal h-10 w-10 items-center justify-center align-center rounded-full outline-none focus:outline-none mr-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fab fa-facebook-square\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full lg:w-6/12 px-4\">\r\n              <div className=\"flex flex-wrap items-top mb-6\">\r\n                <div className=\"w-full lg:w-4/12 px-4 ml-auto\">\r\n                  <span className=\"block uppercase text-blueGray-500 text-sm font-semibold mb-2\">\r\n                    Useful Links\r\n                  </span>\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>\r\n                      <Link\r\n                          to=\"/aboutus\"\r\n                          className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n\r\n                        >\r\n                        About Us\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n                        href=\"/rules\"\r\n                      >\r\n                        Privacy Policy\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <Link\r\n                            to=\"/contactus\"\r\n                            className=\"text-blueGray-600 hover:text-blueGray-800 font-semibold block pb-2 text-sm\"\r\n\r\n                          >\r\n                          Contact Us\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr className=\"my-6 border-blueGray-300\" />\r\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n            <div className=\"w-full md:w-12/12 px-4 mx-auto text-center\">\r\n              <div className=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n                Copyright © {new Date().getFullYear()} 4 Bagger USA.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport background from \"../assets/img/bb2.jpg\";\r\n\r\n// components\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\n\r\nexport default function Landing() {\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <IndexNavbar transparent />\r\n      <main style={{paddingTop: \"20px\"}}>\r\n        <div className=\"relative pt-16 pb-32 flex content-center items-center justify-center min-h-screen-75\">\r\n          <div\r\n            className=\"absolute top-0 w-full h-full bg-center bg-cover\"\r\n            style={{\r\n              backgroundImage:\r\n                `url(${background})`,\r\n            }}\r\n          >\r\n            <span\r\n              id=\"blackOverlay\"\r\n              className=\"w-full h-full absolute opacity-75\"\r\n            ></span>\r\n          </div>\r\n          <div className=\"container relative mx-auto\">\r\n            <div className=\"items-center flex flex-wrap\">\r\n              <div className=\"w-full lg:w-6/12 px-4 ml-auto mr-auto text-center\">\r\n                <div className=\"pr-12\">\r\n                  <h1 className=\"text-white font-semibold text-2xl\">\r\n                  PROVIDING A FIRST CLASS EXPERIENCE FOR ALL LEVEL OF TRAVEL BASEBALL\r\n                  </h1>\r\n                  <p className=\"mt-4 text-md  text-blueGray-200\" style={{color:'#49be25'}}>\r\n                  4 Bagger USA is dedicated to providing a quality experience for all teams in travel baseball. We will provide great tournament coverage along with prospects promotions throughout our tournament and showcases.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"top-auto bottom-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden h-70-px\"\r\n            style={{ transform: \"translateZ(0)\" }}\r\n          >\r\n            <svg\r\n              className=\"absolute bottom-0 overflow-hidden\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              preserveAspectRatio=\"none\"\r\n              version=\"1.1\"\r\n              viewBox=\"0 0 2560 100\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n            >\r\n              <polygon\r\n                className=\"text-blueGray-200 fill-current\"\r\n                points=\"2560 0 2560 100 0 100\"\r\n              ></polygon>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      \r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bb3.8ee62fbf.jpg\";","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport background from \"../assets/img/bb3.jpg\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\n\r\nexport default function Index() {\r\n    window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <IndexNavbar  />\r\n      <section className=\"header relative items-center flex h-screen max-h-860-px\" style={{backgroundImage:`url(${background})`}}>\r\n        <div className=\"container mx-auto items-center flex flex-wrap\" style={{paddingTop: \"60px\"}}>\r\n          <div className=\"w-full md:w-12/12 lg:w-8/12 xl:w-12  8/12 px-4\">\r\n            <div className=\"pt-32 sm:pt-0\">\r\n            <div  className=\"relative flex flex-col min-w-0 break-words w-full shadow-lg rounded-lg bg-blueGray-200\">\r\n                  <div className=\"flex-auto p-5 lg:p-10\">\r\n                    <h4 className=\"text-2xl font-semibold\">\r\n                      Want to work with us?\r\n                    </h4>\r\n                    <p className=\"leading-relaxed mt-1 mb-4 text-blueGray-500\">\r\n                      Complete this form and we will get back to you in 24\r\n                      hours.\r\n                    </p>\r\n                    <div className=\"relative w-full mb-3 mt-8\">\r\n                      <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"full-name\"\r\n                      >\r\n                        Full Name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        placeholder=\"Full Name\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"relative w-full mb-3\">\r\n                      <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"email\"\r\n                      >\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"relative w-full mb-3\">\r\n                      <label\r\n                        className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                        htmlFor=\"message\"\r\n                      >\r\n                        Message\r\n                      </label>\r\n                      <textarea\r\n                        rows=\"4\"\r\n                        cols=\"80\"\r\n                        className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\"\r\n                        placeholder=\"Type a message...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center mt-6\">\r\n                      <button\r\n                        className=\"bg-blueGray-800 text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                      >\r\n                        Send Message\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bb4.b805aefc.jpg\";","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport background from \"../assets/img/bb4.jpg\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <IndexNavbar fixed />\r\n      <section className=\"header relative items-center flex\" style={{backgroundImage:`url(${background})`}}>\r\n        <div className=\"container mx-auto items-center\">\r\n          <div className=\"w-full md:w-12/12 lg:w-12/12 xl:w-12  8/12 px-4\">\r\n            <div className=\"pt-32 mt-5\" style={{color:'white'}}>\r\n              <h2 className=\"font-semibold text-5xl\" style={{color:'#49be25'}}>\r\n                Rules:\r\n              </h2>\r\n              \r\n              <p className=\"mt-10 text-md leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> All games will be under a 2 hour time limit. If an inning is started and goes over the 2 hour time limit and the home team is losing, the inning must be completed. Pool play games can end in a tie. No new inning will be started after 2 hours in pool play.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> No extra innings to be played in pool play even if time allows. Extra innings in playoffs will consist of placing the last out of the last inning on 2nd base and the batting team will start the inning with 1 out.\r\n              </p><p className= \"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> All teams must be at the field ready to play 15-20 minutes before their scheduled game time.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Home team in pool play will be determined by a coin flip. In the playoffs the higher seed will always be the home team.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Seeds are determined by W/L/T count. In a result that teams have the same record we will resort to runs allowed then by scored.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Teams are responsible to have correct and accurate rosters uploaded and added to their team page pre-event. Players may not play for multiple teams in the event.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Players must be age eligible to compete in an age group event based off grad year and or age by May 1.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Bats for all tournaments will be wood bats that are a minimum of -3 regulated.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Run rules are as followed: 12 after 3, 10 after 4 and 8 after 5.\r\n              </p><p className=\"mt-4 text-md leading-relaxed\">\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Courtesy runners are allowed for catchers and pitchers. The courtesy runner must be a player currently not in the game.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> NFHS rules will be enforced.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Teams may hit straight 9, hit 9 using a DH, hit 10 using a EH, or hit 11 using 2 EHs.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> EH is used as free substitution to place into the field of play.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> If rain outs occur and 4 innings of play are completed the team in the lead will be declared the winner. If 4 innings are not completed we will attempt to make the game complete at a later time. If we can not complete the game our staff will determine a winner based off current situation in game and based off current pool standings.\r\n              </p>\r\n              <p className=\"mt-10 text-md leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> If a team must forfeit the winning team will assume a 8-0 win towards pool standings or playoff advancement.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Pitching rules will be a recommendation of protecting your players arms by following the USA Pitchsmart Guidelines\r\n              </p><p className= \"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> Gate fees will be cashless entry. All teams will be given 3 coaches passes for each event. These coaches' names must be submitted pre-event. Harassment of tournament staff will not be tolerated and could result in the team removal from the tournament.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}}></i> One dozen baseballs will be provided to each team pre-event. A coach from each team is responsible to communicate with tournament directors on when and where to pick up baseballs.\r\n              </p>\r\n              <p className=\"text-sm leading-relaxed\" >\r\n              <i className=\"fas fa-check-circle\" style={{color:'#a83232'}} ></i> Refund policy is as followed: if a team drops pre-event a credit of 75% will be added to a future event. If weather results in cancellation of event pre-event and no games are played teams will receive a 75% credit to a future event. If a team completes 25% of games guarantee IE 1 of 4 games guarantee a 40% credit will be given to that team for future events. If a team plays 50% of games guaranteed no credit will be given.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bb1.a76552e9.jpg\";","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport background from \"../assets/img/bb1.jpg\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\n\r\nexport default function Index() {\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <IndexNavbar fixed />\r\n      <section className=\"header relative items-center flex h-screen max-h-860-px\" style={{backgroundImage:`url(${background})`}}>\r\n        <div className=\"container mx-auto items-center flex flex-wrap\">\r\n          <div className=\"w-full md:w-12/12 lg:w-8/12 xl:w-12  8/12 px-4\">\r\n            <div className=\"pt-32 sm:pt-0\">\r\n              <h2 className=\"font-semibold text-4xl\" style={{color:'#49be25'}}>\r\n                OUR\r\n                MISSION\r\n              </h2>\r\n              <p className=\"mt-4 text-lg leading-relaxed\" style={{color:'white'}}>\r\n              4 Bagger USA’s mission is to provide all players and teams including the NON Division 1 / NON major’s level teams the ability to play at great venues while providing metrics, coverage and content the same as or better than the top ranked teams in the country.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <section className=\"header relative py-20  overflow-hidden\" >\r\n            <div className=\"container mx-auto pb-40\" style={{paddingTop:\"40px\"}}>\r\n                <div className=\"flex flex-wrap justify-center\">\r\n                    <div className=\"w-full relative md:w-5/12 px-12 md:px-4 ml-auto mr-auto md:mt-64\">\r\n                        <CircularProgress className=\"text-align-center text-danger\" style={{height: \"100px\", width: \"100px\"}}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n    ","export default __webpack_public_path__ + \"static/media/tbg2.2c9cf1ab.jpg\";","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\n\r\nconst EnrollAlertModal = ({ show, setShowModal, history }) => {\r\n    const goToLogin = () => {\r\n        history.push(`/auth/login`)\r\n    };\r\n    return (\r\n        <Modal show={show} >\r\n            <ModalHeader>\r\n                <ModalTitle>You need to Login as a team in order to Enroll in this tournament.</ModalTitle>\r\n            </ModalHeader>\r\n            <ModalFooter>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => goToLogin()}>Login</button>\r\n                <button type=\"button\" className=\"modal-close btn btn-secondary\" onClick={() => setShowModal(false)}>close</button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EnrollAlertModal;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Loading from \"views/LoadingPage\";\r\nimport background from \"assets/img/tbg2.jpg\";\r\nimport EnrollAlertModal from \"components/Modals/SignInEnrollModal\";\r\n\r\nexport default function TournamentPage() {\r\n    window.scrollTo(0, 0);\r\n    const event = JSON.parse(localStorage.getItem('event'));\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();   \r\n    const history = useHistory();\r\n    const [show, setShowModal] = useState(false);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    const back = () => {\r\n        history.push(`/Events/tournaments`)\r\n      };\r\n\r\n      useEffect(() => {\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <>\r\n        <IndexNavbar fixed />\r\n        {event ? \r\n        \r\n        <section className=\"header relative py-20\" style={{marginBottom: event.length === 0 ? \"356px\":\"0\"}}  style={{backgroundImage: `url(${background})`}}>\r\n            <div className=\"container mx-auto\" style={{paddingTop:\"90px\", paddingBottom:\"30px\"}} >\r\n                <button\r\n                    className=\"btn-lg btn-warning mb-1\"\r\n                    type=\"button\"\r\n                    onClick={back}\r\n                    >\r\n                    Back\r\n                </button>\r\n                <EnrollAlertModal show = {show} setShowModal = {setShowModal} history = {history} />\r\n                <div className=\"col-12 flex flex-wrap justify-center\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <div className=\"text-white text-center font-bold\" style={{fontSize: \"30pt\"}}>\r\n                        {event.eventName} Tournament\r\n                        </div>\r\n                        <div className=\"text-danger font-bold\">\r\n                            Start: {event.startDate.slice(0, 10)} - End: {event.endDate.slice(0, 10)}<br/>\r\n                        </div>\r\n                        <div className=\"text-secondary font-bold\">\r\n                        {event.fieldComplexName} - {event.fieldComplexCity}, {event.fieldComplexState}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-5 row col-md-7 alert alert-primary font-bold\">\r\n                    <i class=\"fa fa-baseball-ball mr-1\"></i><h3>Game Format: {event.gameFormat}</h3>\r\n                    </div>\r\n                    <div className=\"row col-md-7 alert alert-primary font-bold\">\r\n                    <i className=\"fa fa-money-bill mr-1\"></i><h3>Entry Fee: ${event.entryFee}</h3>\r\n                    </div>\r\n                    <div className=\"row col-md-7 alert alert-primary font-bold\">\r\n                    <i className=\"fa fa-money-check mr-1\"></i><h3>Gate Fee: ${event.gateFee}</h3>\r\n                    </div> \r\n                    {user?.result.role === \"team\" ? \r\n                    <button\r\n                    className=\"col-md-8 btn-lg btn-success\"\r\n                    type=\"button\"\r\n                    onClick={\"\"}\r\n                    >\r\n                    Enroll\r\n                    </button>:\r\n                    <button\r\n                        onClick={() => setShowModal(true)}\r\n                        className=\"col-md-8 btn-lg btn-success\"\r\n                        type=\"button\"\r\n                        >\r\n                        Enroll\r\n                    </button>\r\n                    }         \r\n                </div>\r\n            </div>\r\n        </section>\r\n        : \r\n        <Loading />\r\n        }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Switch, Route } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, CardActions } from '@material-ui/core/';\r\nimport { getevent } from 'actions/event';\r\nimport moment from 'moment';\r\nimport TournamentPage from 'views/events/tournaments/TournamentPage';\r\nimport Tournaments from 'views/events/tournaments/Tournaments';\r\n  \r\nconst TournamentCard = ({ tournament }) => {\r\n  const dispatch = useDispatch();   \r\n  const history = useHistory();  \r\n\r\n  return (\r\n    <>\r\n      <Card className='col-12 p-3' style={{backgroundColor: \"whitesmoke\"}}>\r\n          <div >  \r\n              <Typography className='text-left' variant=\"body2\"> Tournament Director: <span className='text-success'>{tournament.createdBy}</span></Typography>\r\n              <Typography className='text-secondary mt-1' variant=\"body2\">Created {moment(tournament.createdAt).fromNow()}</Typography>\r\n          </div>\r\n          <Typography className='text-center text-danger mt-2' variant=\"h5\" component=\"h2\">{tournament.eventName}</Typography>\r\n          <CardContent>\r\n              <Typography className='text-center text-secondary'  component=\"h2\">{tournament.fieldComplexName}</Typography>\r\n              <Typography className='text-center text-secondary'>{tournament.fieldComplexCity}, {tournament.fieldComplexState}</Typography>\r\n          </CardContent>\r\n          <CardActions >\r\n            <button className='btn btn-success' onClick={() => dispatch(getevent(tournament._id, history))}> Visit </button>\r\n          </CardActions>\r\n      </Card>\r\n    </>\r\n      \r\n  );\r\n};\r\n\r\nexport default TournamentCard;\r\n\r\n","/*eslint-disable*/\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Ticker from 'react-ticker'\r\nimport TournamentCard from \"../../../components/Cards/TournamentCard\";\r\nimport { getevents } from \"actions/event\";\r\nimport Loading from \"views/LoadingPage\";\r\n\r\nexport default function Tournaments() {\r\n    window.scrollTo(0, 0);\r\n    const events = useSelector((state) => state.events);\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();   \r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.push(`/Events`)\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getevents());\r\n    }, [location])\r\n    return (\r\n        <>\r\n        <IndexNavbar fixed />\r\n        {events.length > 0 ? \r\n        <section className=\"header relative\" style={{padding: \"90px\"}}>\r\n            <div className=\"mx-auto\" style={{paddingTop:\"90px\", paddingBottom:\"30px\"}}> \r\n                 <button\r\n                    className=\"btn-lg btn-warning mb-1\"\r\n                    type=\"button\"\r\n                    onClick={back}\r\n                    >\r\n                    Back\r\n                </button>\r\n                <div className=\"text-white text-xl font-bold col-12 bg-black p-3 rounded text-center\">\r\n                    <Ticker>\r\n                        {({  }) => (\r\n                            <>\r\n                                Tournaments: &nbsp; &nbsp; &nbsp;\r\n                                <img src=\"www.my-image-source.com/\" alt=\"\"/>\r\n                            </>\r\n                        )}\r\n                    </Ticker>\r\n                </div>  \r\n                <div className=\"flex flex-wrap justify-center\" style={{marginTop: \"20px\"}}>\r\n                    <Grid container spacing={5}>\r\n                    {events.map((event) => (\r\n                        <Grid key={event._id} item xs={12} sm={6} md={6}>\r\n                            <TournamentCard tournament={event} />\r\n                        </Grid>\r\n                    ))}\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        : \r\n        <Loading />\r\n        }\r\n        </>\r\n    );\r\n}\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport Tournaments from \"./tournaments/Tournaments\";\r\nimport TournamentPage from \"./tournaments/TournamentPage\";\r\n\r\nexport default function EventsMainPage() {\r\n  const tournament = JSON.parse(localStorage.getItem('event'));\r\n\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <IndexNavbar fixed />\r\n      \r\n      <Switch>\r\n        <Route exact path={`/Events/tournaments`} component={Tournaments} />\r\n        {tournament ?\r\n        <Route exact path={`/Events/tournaments/${tournament.eventName}`} component={TournamentPage} />\r\n        :\"\"}\r\n        <section className=\"header relative py-20  overflow-hidden\" >\r\n          <div className=\"container mx-auto pb-40\" style={{paddingTop:\"40px\"}}>\r\n            <div className=\"flex flex-wrap justify-center\">\r\n              <div className=\"w-full relative md:w-5/12 px-12 md:px-4 ml-auto mr-auto md:mt-64\">\r\n                <Link\r\n                  to=\"/Events/tournaments\"\r\n                  className=\"github-star mt-4 inline-block text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-success text-white active:bg-blueGray-600 uppercase text-sm shadow hover:shadow-lg\"\r\n                >\r\n                  Tournament Schedule\r\n                </Link>\r\n                <Link\r\n                  to=\"https://github.com/creativetimofficial/notus-react?ref=nr-index\"\r\n                  className=\"github-star mt-4 inline-block text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-success text-white active:bg-blueGray-600 uppercase text-sm shadow hover:shadow-lg\"\r\n                >\r\n                  Tournament Results\r\n                </Link>\r\n                <Link\r\n                  to=\"/tournaments\"\r\n                  className=\"github-star mt-4 inline-block font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-success text-white uppercase text-sm shadow hover:shadow-lg\"\r\n                >\r\n                  Teams Registration\r\n                </Link>\r\n                \r\n              </div>\r\n              <div className=\"w-full md:w-4/12 px-4 mr-auto ml-auto mt-32 relative\">\r\n                <i className=\"fa fa-baseball-ball text-danger absolute -top-150-px -right-100 left-auto opacity-80 text-55\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\n\r\n// layouts\r\n\r\nimport Account from \"dashboard/Account\";\r\nimport Auth from \"layouts/Auth\";\r\n\r\n// views without layouts\r\nimport AboutUs from \"views/AboutUs\";\r\nimport ContactUs from \"views/ContactUs\";\r\nimport Rules from \"views/Rules\";\r\nimport Index from \"views/Index\";\r\nimport EventsMainPage from \"views/events/EventsMainPage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                {/* add routes with layouts */}\r\n                <Route path=\"/account\" component={Account} />\r\n                <Route path=\"/auth\" component={Auth} />\r\n                {/* add routes without layouts */}\r\n                <Route path=\"/aboutus\" component={AboutUs} />\r\n                <Route path=\"/contactus\" component={ContactUs} />\r\n                <Route path=\"/rules\" component={Rules} />\r\n                <Route path=\"/Events\" component={EventsMainPage} />\r\n                <Route path=\"/\" exact component={Index} />\r\n                {/* add redirect for first page */}\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\n\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}